{
	"info": {
		"_postman_id": "d0245d50-faeb-49df-9506-318bd40940bc",
		"name": "Commercetools",
		"description": "# Braintree Commercetools API Postman collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the Braintree extension for Commercetools. For every command the smallest possible payload is given. Please find optional fields in the related official documentation.\n\n## Disclaimer\n\nThis is not the official Braintree documentation. Please see [here](http://docs.commercetools.com/)  \nfor a complete and approved documentation of the Braintree.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.****Use this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the collection.json and [template.json](https://github.com/commercetools/commercetools-postman-collection/blob/master/api/template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n    \n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such  \nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see [http://docs.commercetools.com/](http://docs.commercetools.com/) for further information about the commercetools Plattform.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25620848"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Obtain access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(data.access_token){",
									"    pm.environment.set(\"ctp_access_token\", data.access_token);",
									"}",
									"if (data.scope) {",
									"    parts = data.scope.split(\" \");",
									"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
									"    if (parts.length > 0) {",
									"        scopeParts = parts[0];",
									"        pm.environment.set(\"project-key\", scopeParts[1]);",
									"        parts = parts.filter(scope => scope.length >= 3)",
									"        if (parts.length > 0) {",
									"            scopeParts = parts[0];",
									"            pm.environment.set(\"store-key\", scopeParts[2]);",
									"        }",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						},
						"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
					},
					"response": []
				},
				{
					"name": "Obtain access token through password flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(data.access_token){",
									"    pm.environment.set(\"ctp_access_token\", data.access_token);",
									"}",
									"if (data.scope) {",
									"    parts = data.scope.split(\" \");",
									"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
									"    if (parts.length > 0) {",
									"        scopeParts = parts[0];",
									"        pm.environment.set(\"project-key\", scopeParts[1]);",
									"        parts = parts.filter(scope => scope.length >= 3)",
									"        if (parts.length > 0) {",
									"            scopeParts = parts[0];",
									"            pm.environment.set(\"store-key\", scopeParts[2]);",
									"        }",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{auth_url}}/oauth/{{project-key}}/customers/token?grant_type=password&username=&password=",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"{{project-key}}",
								"customers",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "username",
									"value": ""
								},
								{
									"key": "password",
									"value": ""
								}
							]
						},
						"description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
					},
					"response": []
				},
				{
					"name": "Token for Anonymous Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(data.access_token){",
									"    pm.environment.set(\"ctp_access_token\", data.access_token);",
									"}",
									"if (data.scope) {",
									"    parts = data.scope.split(\" \");",
									"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
									"    if (parts.length > 0) {",
									"        scopeParts = parts[0];",
									"        pm.environment.set(\"project-key\", scopeParts[1]);",
									"        parts = parts.filter(scope => scope.length >= 3)",
									"        if (parts.length > 0) {",
									"            scopeParts = parts[0];",
									"            pm.environment.set(\"store-key\", scopeParts[2]);",
									"        }",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{auth_url}}/oauth/{{project-key}}/anonymous/token?grant_type=client_credentials",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"{{project-key}}",
								"anonymous",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						},
						"description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
					},
					"response": []
				},
				{
					"name": "Token Introspection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{auth_url}}/oauth/introspect?token={{ctp_access_token}}",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"introspect"
							],
							"query": [
								{
									"key": "token",
									"value": "{{ctp_access_token}}"
								}
							]
						},
						"description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
					},
					"response": []
				}
			],
			"description": "Authorization"
		},
		{
			"name": "Braintree",
			"item": [
				{
					"name": "Refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"refundRequest\",\n            \"value\" : \"{}\"\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Refund a transaction.\n\nYou can refund transactions that have a status of settled or settling. If the transaction has not yet begun settlement, use Void instead. If you do not specify an amount to refund, the entire transaction amount will be refunded.\n\nThe payment needs at least one settled sale transaction. If there are multiple transactions, the newest one will be refunded. If you want to refund a specific transaction, provide the optional parameter transactionId (see Transaction Refund)."
					},
					"response": []
				},
				{
					"name": "Partial Refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"refundRequest\",\n            \"value\" : \"{\\\"amount\\\": 1}\"\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Refund a transaction.\n\nYou can refund transactions that have a status of settled or settling. If the transaction has not yet begun settlement, use Void instead. If you do not specify an amount to refund, the entire transaction amount will be refunded.\n\nThe payment needs at least one settled sale transaction. If there are multiple transactions, the newest one will be refunded. If you want to refund a specific transaction, provide the optional parameter transactionId (see Transaction Refund)."
					},
					"response": []
				},
				{
					"name": "SubmitForSettlement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"submitForSettlementRequest\",\n            \"value\" : \"{\\\"transactionId\\\": \\\"a5q49fs3\\\", \\\"amount\\\": 10}\"\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Submit a transaction for settlement.\n\nYou can only submit transactions that have a status of authorized for settlement.\n\nThe payment needs at least one authorized transaction. If there are multiple transactions, the newest one will be submitted for settlement. If you want to submit a specific transaction, provide the optional parameter transactionId (see Transaction SubmitForSettlement)."
					},
					"response": []
				},
				{
					"name": "Transaction Refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTransactionCustomType\",\n            \"transactionId\": \"{{transaction-id}}\",\n            \"type\" : {\n              \"key\" : \"braintree-payment-transaction-type\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"refundRequest\" : \"{}\"\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Refund a transaction.\n\nYou can refund transactions that have a status of settled or settling. If the transaction has not yet begun settlement, use Void instead. If you do not specify an amount to refund, the entire transaction amount will be refunded."
					},
					"response": []
				},
				{
					"name": "Transaction SubmitForSettlement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTransactionCustomType\",\n            \"transactionId\": \"{{transaction-id}}\",\n            \"type\" : {\n              \"key\" : \"braintree-payment-transaction-type\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"submitForSettlementRequest\" : \"{}\"\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Submit a transaction for settlement.\n\nYou can only submit transactions that have a status of authorized for settlement."
					},
					"response": []
				},
				{
					"name": "TransactionSale",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"transactionSaleRequest\",\n            \"value\" : \"{\\\"paymentMethodNonce\\\": \\\"fake-valid-nonce\\\"\"\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "post Payments"
					},
					"response": []
				},
				{
					"name": "GetClientToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"getClientTokenRequest\",\n            \"value\" : \"{}\"\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get Client Token.\n\nReturns a string which contains all authorization and configuration  \ninformation your client needs to initialize the client SDK to  \ncommunicate with Braintree."
					},
					"response": []
				},
				{
					"name": "SetCustomType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"payment-id\", data.results[0].id); ",
									"    pm.environment.set(\"payment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"payment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"payment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"payment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"payment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"braintree-payment-type\",\n              \"typeId\" : \"type\"\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"payments",
								"{{payment-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Set the custom type of a payment to braintree-payment-type so that custom fields like getClientTokenRequest can be set."
					},
					"response": []
				}
			],
			"description": "The Braintree endpoint gives examples how to trigger certain Braintree events using the connect application. When a payment has the custom type with the key \"braintree-payment-type\", there are custom fields to set (e.g. getClientTokenRequest, transactionSaleRequest, ...) so that the extension will call the Braintree API and return the response in a corresponding custom field (e.g. getClientTokenResponse, ...). Additionally the request and response is stored in the payment interactions of that payment and for certain calls a transaction is created in the payment object (e.g. transactionSale, refund, submitForSettlement, ...).\n\nThe request data needs to be provided as an json encoded string."
		},
		{
			"name": "Commercetools",
			"item": [
				{
					"name": "Categories",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddAsset",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAsset\",\n            \"asset\" : {\n              \"sources\" : [ {\n                \"uri\" : \"https://www.commercetools.de/ct-logo.svg\",\n                \"key\" : \"vector\"\n              } ],\n              \"name\" : {\n                \"de\" : \"commercetools Logo\",\n                \"en\" : \"commercetools logo\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeAssetName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAssetName\",\n            \"assetId\" : \"{{assetId}}\",\n            \"name\" : {\n              \"de\" : \"Mein Asset\",\n              \"en\" : \"My asset\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeAssetOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAssetOrder\",\n            \"assetOrder\" : [ \"{{assetId1}}\", \"{{assetId2}}\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"de\" : \"neuer Category Name\",\n              \"en\" : \"new category name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeOrderHint",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeOrderHint\",\n            \"orderHint\" : \"0.1\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeParent",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeParent\",\n            \"parent\" : {\n              \"typeId\" : \"category\",\n              \"id\" : \"{{category-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "ChangeSlug",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeSlug\",\n            \"slug\" : {\n              \"de\" : \"meine-kategorie\",\n              \"en\" : \"my-category\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "RemoveAsset",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeAsset\",\n            \"assetId\" : \"{{assetId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetCustomField\",\n            \"assetId\" : \"{{assetId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetCustomType\",\n            \"assetId\" : \"{{assetId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetDescription\",\n            \"assetId\" : \"{{assetId}}\",\n            \"description\" : {\n              \"de\" : \"Dies ist eine Asset-Beschreibung\",\n              \"en\" : \"This is an asset description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetKey\",\n            \"assetId\" : \"{{assetId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetSources",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetSources\",\n            \"assetId\" : \"{{assetId}}\",\n            \"sources\" : [ {\n              \"uri\" : \"https://www.commercetools.de/ct-logo.svg\",\n              \"key\" : \"vector\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetAssetTags",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetTags\",\n            \"assetId\" : \"{{assetId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"de\" : \"This is a category description\",\n              \"en\" : \"Dies ist eine Kategorie-Beschreibung\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetExternalId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setExternalId\",\n            \"externalId\" : \"externalIdString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"myNewKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetMetaDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaDescription\",\n            \"metaDescription\" : {\n              \"de\" : \"Dies ist meine MetaDecription\",\n              \"en\" : \"this is my meta description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetMetaKeywords",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaKeywords\",\n            \"metaKeywords\" : {\n              \"de\" : \"commercetools, genial\",\n              \"en\" : \"commercetools, aweseome\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								},
								{
									"name": "SetMetaTitle",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"category-id\", data.results[0].id); ",
													"    pm.environment.set(\"category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaTitle\",\n            \"metaTitle\" : {\n              \"de\" : \"Dies ist mein Meta-Title\",\n              \"en\" : \"This is my meta title\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"categories",
												"{{category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Categories"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Category by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/key={{category-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"key={{category-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Category by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/key={{category-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"key={{category-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Category by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/key={{category-key}}?version={{category-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"key={{category-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{category-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Category by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"{{category-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Category by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/{{category-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"{{category-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Category by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories/{{category-id}}?version={{category-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories",
										"{{category-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{category-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id\", data.results[0].id); ",
											"    pm.environment.set(\"category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : {\n    \"en\" : \"Top hat\"\n  },\n  \"slug\" : {\n    \"en\" : \"top-hat\"\n  },\n  \"orderHint\" : \"0.1\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creating a category produces the CategoryCreated message."
							},
							"response": []
						}
					],
					"description": "Categories are used to organize products in a hierarchical structure."
				},
				{
					"name": "Carts",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddCustomLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addCustomLineItem\",\n            \"name\" : {\n              \"en\" : \"Name EN\",\n              \"de\" : \"Name DE\"\n            },\n            \"quantity\" : 1,\n            \"money\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4200\n            },\n            \"slug\" : \"mySlug\",\n            \"taxCategory\" : {\n              \"typeId\" : \"tax-category\",\n              \"id\" : \"{{category-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "AddDiscountCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addDiscountCode\",\n            \"code\" : \"mydiscountcode\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "AddItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "AddLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addLineItem\",\n            \"productId\" : \"{{product-id}}\",\n            \"variantId\" : 2,\n            \"quantity\" : 1,\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"externalTaxRate\" : {\n              \"name\" : \"StandardExternalTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\",\n              \"state\" : \"Bavaria\"\n            },\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "AddPayment",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPayment\",\n            \"payment\" : {\n              \"id\" : \"{{payment-id}}\",\n              \"typeId\" : \"payment\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "AddShoppingList",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addShoppingList\",\n            \"shoppingList\" : {\n              \"id\" : \"{{shopping-list-id}}\",\n              \"typeId\" : \"shopping-list\"\n            },\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ApplyDeltaToCustomLineItemShippingDetailsTargets",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"applyDeltaToCustomLineItemShippingDetailsTargets\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"targetsDelta\" : [ {\n              \"addressKey\" : \"addressKeyString\",\n              \"quantity\" : 1\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ApplyDeltaToLineItemShippingDetailsTargets",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"applyDeltaToLineItemShippingDetailsTargets\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"targetsDelta\" : [ {\n              \"addressKey\" : \"addressKeyString\",\n              \"quantity\" : 1\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeCustomLineItemMoney",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCustomLineItemMoney\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"money\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4200\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeCustomLineItemQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCustomLineItemQuantity\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeLineItemQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLineItemQuantity\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeTaxCalculationMode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxCalculationMode\",\n            \"taxCalculationMode\" : \"LineItemLevel\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeTaxMode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxMode\",\n            \"taxMode\" : \"Platform\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "ChangeTaxRoundingMode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxRoundingMode\",\n            \"taxRoundingMode\" : \"HalfUp\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "Recalculate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"recalculate\",\n            \"updateProductData\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "RemoveCustomLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeCustomLineItem\",\n            \"customLineItemId\" : \"{{customLineItemId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "RemoveDiscountCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeDiscountCode\",\n            \"discountCode\" : {\n              \"typeId\" : \"discount-code\",\n              \"id\" : \"{{discount-code-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "RemoveItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeItemShippingAddress\",\n            \"addressKey\" : \"{{addressKey}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "RemoveLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeLineItem\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1,\n            \"externalPrice\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4000\n            },\n            \"shippingDetailsToRemove\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "RemovePayment",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removePayment\",\n            \"payment\" : {\n              \"id\" : \"{{payment-id}}\",\n              \"typeId\" : \"payment\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetAnonymousId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAnonymousId\",\n            \"anonymousId\" : \"idString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetBillingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetBillingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetBillingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCartTotalTax",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCartTotalTax\",\n            \"externalTotalGross\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 10000\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCountry",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCountry\",\n            \"country\" : \"DE\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomField\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            },\n            \"customLineItemId\" : \"{{customLineItemId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemShippingDetails",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemShippingDetails\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 1\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemTaxAmount",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemTaxAmount\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"centAmount\" : 2000000,\n                \"currencyCode\" : \"EUR\"\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemTaxRate\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"externalTaxRate\" : {\n              \"name\" : \"TaxRateName\",\n              \"country\" : \"DE\",\n              \"amount\" : 0.19\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomShippingMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomShippingMethod\",\n            \"shippingMethodName\" : \"myCustomShippingMethod\",\n            \"shippingRate\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              }\n            },\n            \"taxCategory\" : {\n              \"id\" : \"{{category-id}}\",\n              \"typeId\" : \"tax-category\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomerEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerEmail\",\n            \"email\" : \"foo@bar.com\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomerGroup",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerGroup\",\n            \"customerGroup\" : {\n              \"id\" : \"{{customer-group-id}}\",\n              \"typeId\" : \"customer-group\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetCustomerId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerId\",\n            \"customerId\" : \"{{customer-id}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetDeleteDaysAfterLastModification",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeleteDaysAfterLastModification\",\n            \"deleteDaysAfterLastModification\" : 90\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetDeliveryAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomField\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetDeliveryAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomType\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetItemShippingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomField\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetItemShippingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomType\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"myNewKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomField\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomType\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemDistributionChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemDistributionChannel\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemPrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemPrice\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalPrice\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4000\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemShippingDetails",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemShippingDetails\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 1\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemTaxAmount",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTaxAmount\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 100\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTaxRate\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTaxRate\" : {\n              \"name\" : \"myTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLineItemTotalPrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTotalPrice\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTotalPrice\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              },\n              \"totalPrice\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetLocale",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethod\",\n            \"shippingMethod\" : {\n              \"id\" : \"{{shipping-method-id}}\",\n              \"typeId\" : \"shipping-method\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingMethodTaxAmount",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethodTaxAmount\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"centAmount\" : 2000000,\n                \"currencyCode\" : \"EUR\"\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingMethodTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethodTaxRate\",\n            \"externalTaxRate\" : {\n              \"name\" : \"myTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "SetShippingRateInput",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingRateInput\",\n            \"shippingRateInput\" : {\n              \"type\" : \"Classification\",\n              \"key\" : \"shippingRateString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								},
								{
									"name": "UpdateItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Carts"
									},
									"response": []
								}
							]
						},
						{
							"name": "Replicate cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"replicate-id\", data.results[0].id); ",
											"    pm.environment.set(\"replicate-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"replicate-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"replicate-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"replicate-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"replicate-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/replicate",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"replicate"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Cart by customerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/customer-id={{customer-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"customer-id={{customer-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the active cart of the customer that has been modified most recently.\nIt does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.\n"
							},
							"response": []
						},
						{
							"name": "Get Cart by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/key={{cart-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"key={{cart-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "The cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n"
							},
							"response": []
						},
						{
							"name": "Update Cart by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/key={{cart-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"key={{cart-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Cart by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/key={{cart-key}}?version={{cart-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"key={{cart-key}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{cart-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Cart by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"{{cart-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "The cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n"
							},
							"response": []
						},
						{
							"name": "Update Cart by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"{{cart-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Cart by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts/{{cart-id}}?version={{cart-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts",
										"{{cart-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{cart-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query carts",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts"
									],
									"query": [
										{
											"key": "customerId",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currency\" : \"EUR\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/carts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"carts"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creating a cart can fail with an InvalidOperation if the referenced shipping method in the\nCartDraft has a predicate which does not match the cart.\n"
							},
							"response": []
						}
					],
					"description": "A shopping cart holds product variants and can be ordered."
				},
				{
					"name": "Cart-discounts",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeCartPredicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCartPredicate\",\n            \"cartPredicate\" : \"cartPredicateString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeIsActive",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeIsActive\",\n            \"isActive\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"en\" : \"NewNameEN\",\n              \"de\" : \"NewNameDE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeRequiresDiscountCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeRequiresDiscountCode\",\n            \"requiresDiscountCode\" : true\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeSortOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeSortOrder\",\n            \"sortOrder\" : \"0.2\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeStackingMode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeStackingMode\",\n            \"stackingMode\" : \"Stacking\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeTarget",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTarget\",\n            \"target\" : {\n              \"type\" : \"lineItems\",\n              \"predicate\" : \"sku = \"myOtherSKU\"\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeValue\",\n            \"value\" : {\n              \"type\" : \"absolute\",\n              \"money\" : [ {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 40099\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"en\" : \"New Description EN\",\n              \"de\" : \"New Description DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setKey\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidFrom",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFrom\",\n            \"validFrom\" : \"2017-10-15T15:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidFromAndUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFromAndUntil\",\n            \"validFrom\" : \"2017-10-15T15:00:00.000Z\",\n            \"validUntil\" : \"2017-10-15T15:05:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{cart-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidUntil\",\n            \"validUntil\" : \"2017-10-15T20:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"cart-discounts",
												"{{cart-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CartDiscounts"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get CartDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/key={{cart-discount-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"key={{cart-discount-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update CartDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"relative\",\n      \"permyriad\" : 1000\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/key={{cart-discount-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"key={{cart-discount-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete CartDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/key={{cart-discount-key}}?version={{cart-discount-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"key={{cart-discount-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{cart-discount-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get CartDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"{{cart-discount-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update CartDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"relative\",\n      \"permyriad\" : 1000\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"{{cart-discount-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete CartDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts/{{cart-discount-id}}?version={{cart-discount-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts",
										"{{cart-discount-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{cart-discount-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query cart-discounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create CartDiscount",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"cart-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"cart-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"cart-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"cart-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"cart-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"cart-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : {\n    \"en\" : \"Summer Sale\"\n  },\n  \"value\" : {\n    \"type\" : \"relative\",\n    \"permyriad\" : 1000\n  },\n  \"cartPredicate\" : \"1=1\",\n  \"target\" : {\n    \"type\" : \"lineItems\",\n    \"predicate\" : \"1=1\"\n  },\n  \"sortOrder\" : \"0.1\",\n  \"isActive\" : true,\n  \"requiresDiscountCode\" : false\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/cart-discounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"cart-discounts"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Cart discounts are used to change the prices of different elements within a cart."
				},
				{
					"name": "Channels",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addRoles\",\n            \"roles\" : [ \"InventorySupply\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "ChangeDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeDescription\",\n            \"description\" : {\n              \"en\" : \"new Description EN\",\n              \"de\" : \"new Description DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "ChangeKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeKey\",\n            \"key\" : \"myNewChannelKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"en\" : \"new Channel Name EN\",\n              \"de\" : \"new Channel Name DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "RemoveRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeRoles\",\n            \"roles\" : [ \"InventorySupply\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetGeoLocation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setGeoLocation\",\n            \"geoLocation\" : {\n              \"type\" : \"Point\",\n              \"coordinates\" : [ 48.163569, 11.558663 ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								},
								{
									"name": "SetRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"channel-id\", data.results[0].id); ",
													"    pm.environment.set(\"channel-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"channel-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"channel-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"channel-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"channel-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{channel-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setRoles\",\n            \"roles\" : [ \"ProductDistribution\", \"Primary\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"channels",
												"{{channel-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Channels"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Channel by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"channel-id\", data.results[0].id); ",
											"    pm.environment.set(\"channel-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"channel-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"channel-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"channel-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"channel-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"channels",
										"{{channel-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Channel by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"channel-id\", data.results[0].id); ",
											"    pm.environment.set(\"channel-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"channel-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"channel-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"channel-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"channel-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"channels",
										"{{channel-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Channel by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"channel-id\", data.results[0].id); ",
											"    pm.environment.set(\"channel-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"channel-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"channel-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"channel-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"channel-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/channels/{{channel-id}}?version={{channel-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"channels",
										"{{channel-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{channel-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query channels",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"channel-id\", data.results[0].id); ",
											"    pm.environment.set(\"channel-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"channel-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"channel-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"channel-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"channel-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/channels",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"channels"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"channel-id\", data.results[0].id); ",
											"    pm.environment.set(\"channel-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"channel-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"channel-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"channel-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"channel-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\" : \"commercetools\",\n  \"roles\" : [ \"InventorySupply\" ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/channels",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"channels"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Channels represent a source or destination of different entities. They can be used to model warehouses or stores.\n"
				},
				{
					"name": "Customers",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "AddBillingAddressId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addBillingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "AddShippingAddressId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addShippingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "AddStore",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "ChangeAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAddress\",\n            \"addressId\" : \"{{addressId}}\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "ChangeEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeEmail\",\n            \"email\" : \"mail@mail.com\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "RemoveAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "RemoveBillingAddressId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeBillingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "RemoveShippingAddressId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeShippingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "RemoveStore",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\",\n            \"addressId\" : \"{{address-id}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            },\n            \"addressId\" : \"{{address-id}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetCompanyName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCompanyName\",\n            \"companyName\" : \"Company Ltd.\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetCustomerGroup",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerGroup\",\n            \"customerGroup\" : {\n              \"id\" : \"{{customer-group-id}}\",\n              \"typeId\" : \"customer-group\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetCustomerNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerNumber\",\n            \"customerNumber\" : \"123\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetDateOfBirth",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDateOfBirth\",\n            \"dateOfBirth\" : \"2015-10-21\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetDefaultBillingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDefaultBillingAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetDefaultShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDefaultShippingAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetExternalId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setExternalId\",\n            \"externalId\" : \"123\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetFirstName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setFirstName\",\n            \"fistName\" : \"Example\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"newKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetLastName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLastName\",\n            \"lastName\" : \"Person\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetLocale",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetMiddleName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMiddleName\",\n            \"middleName\" : \"middleName\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetSalutation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSalutation\",\n            \"salutation\" : \"Mr\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetStores",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStores\",\n            \"stores\" : [ {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetTitle",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTitle\",\n            \"title\" : \"Dr\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								},
								{
									"name": "SetVatId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setVatId\",\n            \"vatId\" : \"vatId\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Customers"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get customer by password verification token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/password-token={{password-token}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"password-token={{password-token}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get customer by email verification token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/email-token={{email-token}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"email-token={{email-token}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create a Token for verifying the Customer's Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"email-token-id\", data.results[0].id); ",
											"    pm.environment.set(\"email-token-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"email-token-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"email-token-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"email-token-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"email-token-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/email-token",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"email-token"
									]
								},
								"description": "Create a Token for verifying the Customer's Email"
							},
							"response": []
						},
						{
							"name": "Verifies customer's email.",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"confirm-id\", data.results[0].id); ",
											"    pm.environment.set(\"confirm-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"confirm-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"confirm-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"confirm-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"confirm-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/email/confirm",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"email",
										"confirm"
									]
								},
								"description": "Verifies customer's email using a token."
							},
							"response": []
						},
						{
							"name": "Change a customers password",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"password-id\", data.results[0].id); ",
											"    pm.environment.set(\"password-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"password-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"password-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"password-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"password-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/password",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"password"
									]
								},
								"description": "Change a customers password"
							},
							"response": []
						},
						{
							"name": "Reset Customer's Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"reset-id\", data.results[0].id); ",
											"    pm.environment.set(\"reset-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"reset-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"reset-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"reset-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"reset-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/password/reset",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"password",
										"reset"
									]
								},
								"description": "Set a new password using a token."
							},
							"response": []
						},
						{
							"name": "Create a Token for Resetting the Customer's Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"password-token-id\", data.results[0].id); ",
											"    pm.environment.set(\"password-token-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"password-token-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"password-token-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"password-token-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"password-token-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/password-token",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"password-token"
									]
								},
								"description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n"
							},
							"response": []
						},
						{
							"name": "Get Customer by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/key={{customer-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"key={{customer-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Customer by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/key={{customer-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"key={{customer-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Customer by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/key={{customer-key}}?version={{customer-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"key={{customer-key}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{customer-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Customer by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"{{customer-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Customer by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"{{customer-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Customer by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers/{{customer-id}}?version={{customer-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers",
										"{{customer-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{customer-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\" : \"<random>@example.com\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"password\" : \"secret123\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customers",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customers"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creates a customer. If an anonymous cart is passed in,\nthen the cart is assigned to the created customer and the version number of the Cart will increase.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.\n"
							},
							"response": []
						}
					],
					"description": "A customer is a person purchasing products. customers, Orders, Comments and Reviews can be associated to a customer.\n"
				},
				{
					"name": "Customer-groups",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-group-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-group-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-group-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-group-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : \"New Name\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customer-groups",
												"{{customer-group-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CustomerGroups"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-group-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-group-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-group-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-group-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customer-groups",
												"{{customer-group-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CustomerGroups"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-group-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-group-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-group-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-group-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customer-groups",
												"{{customer-group-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CustomerGroups"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-group-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-group-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-group-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{customer-group-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"newKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"customer-groups",
												"{{customer-group-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post CustomerGroups"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get CustomerGroup by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/key={{customer-group-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"key={{customer-group-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update CustomerGroup by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/key={{customer-group-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"key={{customer-group-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete CustomerGroup by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/key={{customer-group-key}}?version={{customer-group-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"key={{customer-group-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{customer-group-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get CustomerGroup by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"{{customer-group-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update CustomerGroup by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"{{customer-group-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete CustomerGroup by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups/{{customer-group-id}}?version={{customer-group-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups",
										"{{customer-group-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{customer-group-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query customer-groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create CustomerGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\" : \"Webshop user\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "customer-groups are used to evaluate products and channels."
				},
				{
					"name": "Custom-objects",
					"item": [
						{
							"name": "Get CustomObject by container and key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects/{{container}}/{{custom-object-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects",
										"{{container}}",
										"{{custom-object-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Get CustomObject by container and key"
							},
							"response": []
						},
						{
							"name": "Delete CustomObject by container and key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects/{{container}}/{{custom-object-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects",
										"{{container}}",
										"{{custom-object-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{custom-object-version}}",
											"disabled": true
										},
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Delete CustomObject by container and key"
							},
							"response": []
						},
						{
							"name": "Get CustomObjectPagedQueryResponse by container",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects/{{container}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects",
										"{{container}}"
									],
									"query": [
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query custom-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.\n"
							},
							"response": []
						},
						{
							"name": "Create CustomObject",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"container\" : \"test-container\",\n  \"key\" : \"test-key\",\n  \"value\" : \"test-value\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
							},
							"response": []
						}
					],
					"description": "Store custom JSON values."
				},
				{
					"name": "Discount-codes",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeCartDiscounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCartDiscounts\",\n            \"cartDiscounts\" : [ {\n              \"typeId\" : \"cart-discount\",\n              \"id\" : \"{{cartDiscountId}}\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "ChangeGroups",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeGroups\",\n            \"groups\" : [ \"groupString\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "ChangeIsActive",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeIsActive\",\n            \"isActive\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetCartPredicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCartPredicate\",\n            \"cartPredicate\" : \"lineItemCount(sku = \"mySKU\") > 1\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"en\" : \"New Description EN\",\n              \"de\" : \"New Description DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetMaxApplications",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMaxApplications\",\n            \"maxApplications\" : 100\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetMaxApplicationsPerCustomer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMaxApplicationsPerCustomer\",\n            \"maxApplicationsPerCustomer\" : 10\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setName\",\n            \"name\" : {\n              \"en\" : \"New Name EN\",\n              \"de\" : \"New Name DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetValidFrom",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFrom\",\n            \"validFrom\" : \"2018-10-12T14:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetValidFromAndUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFromAndUntil\",\n            \"validFrom\" : \"2018-10-12T14:00:00.000Z\",\n            \"validUntil\" : \"2018-10-12T14:05:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								},
								{
									"name": "SetValidUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
													"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"discount-code-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"discount-code-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"discount-code-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{discount-code-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidUntil\",\n            \"validFrom\" : \"2018-10-12T14:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"discount-codes",
												"{{discount-code-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post DiscountCodes"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get DiscountCode by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
											"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"discount-code-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"discount-code-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"discount-code-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"discount-codes",
										"{{discount-code-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update DiscountCode by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
											"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"discount-code-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"discount-code-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"discount-code-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"discount-codes",
										"{{discount-code-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete DiscountCode by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
											"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"discount-code-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"discount-code-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"discount-code-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/discount-codes/{{discount-code-id}}?version={{discount-code-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"discount-codes",
										"{{discount-code-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{discount-code-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query discount-codes",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
											"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"discount-code-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"discount-code-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"discount-code-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/discount-codes",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"discount-codes"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create DiscountCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"discount-code-id\", data.results[0].id); ",
											"    pm.environment.set(\"discount-code-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"discount-code-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"discount-code-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"discount-code-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"discount-code-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\" : \"SAVE10\",\n  \"name\" : {\n    \"en\" : \"Save10\"\n  },\n  \"cartDiscounts\" : [ {\n    \"typeId\" : \"cart-discount\",\n    \"id\" : \"fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3\"\n  } ],\n  \"isActive\" : true,\n  \"cartPredicate\" : \"1=1\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/discount-codes",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"discount-codes"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Discount codes can be added to a discount-code to enable certain discount-code discounts."
				},
				{
					"name": "Inventory",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addQuantity\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "ChangeQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeQuantity\",\n            \"quantity\" : 5\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "RemoveQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeQuantity\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "SetExpectedDelivery",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setExpectedDelivery\",\n            \"expectedDelivery\" : \"2015-10-21T14:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "SetRestockableInDays",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setRestockableInDays\",\n            \"restockableInDays\" : 7\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								},
								{
									"name": "SetSupplyChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
													"    pm.environment.set(\"inventory-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"inventory-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"inventory-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"inventory-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{inventory-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSupplyChannel\",\n            \"supplyChannel\" : {\n              \"id\" : \"{{supplyChannelId}}\",\n              \"typeId\" : \"channel\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"inventory",
												"{{inventory-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Inventory"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get InventoryEntry by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
											"    pm.environment.set(\"inventory-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"inventory-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"inventory-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"inventory-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"inventory",
										"{{inventory-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update InventoryEntry by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
											"    pm.environment.set(\"inventory-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"inventory-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"inventory-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"inventory-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addQuantity\",\n    \"quantity\" : 4\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"inventory",
										"{{inventory-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete InventoryEntry by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
											"    pm.environment.set(\"inventory-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"inventory-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"inventory-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"inventory-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/inventory/{{inventory-id}}?version={{inventory-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"inventory",
										"{{inventory-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{inventory-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
											"    pm.environment.set(\"inventory-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"inventory-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"inventory-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"inventory-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/inventory",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"inventory"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create InventoryEntry",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"inventory-id\", data.results[0].id); ",
											"    pm.environment.set(\"inventory-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"inventory-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"inventory-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"inventory-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"inventory-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sku\" : \"sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541\",\n  \"quantityOnStock\" : 4,\n  \"availableQuantity\" : 4\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/inventory",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"inventory"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Inventory allows you to track stock quantities."
				},
				{
					"name": "Messages",
					"item": [
						{
							"name": "Get Message by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"message-id\", data.results[0].id); ",
											"    pm.environment.set(\"message-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"message-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"message-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"message-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"message-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/messages/{{message-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"messages",
										"{{message-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"message-id\", data.results[0].id); ",
											"    pm.environment.set(\"message-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"message-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"message-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"message-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"message-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/messages",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"messages"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "A message represents a change or an action performed on a resource (like an Order or a Product)."
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Edits",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddStagedAction",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addStagedAction\",\n            \"stagedAction\" : {\n              \"action\" : \"setCountry\",\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										},
										{
											"name": "SetComment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setComment\",\n            \"comment\" : \"commentString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										},
										{
											"name": "SetKey",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										},
										{
											"name": "SetStagedActions",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"edit-id\", data.results[0].id); ",
															"    pm.environment.set(\"edit-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"edit-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"edit-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"edit-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"edit-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{edit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStagedActions\",\n            \"stagedActions\" : [ {\n              \"action\" : \"setCountry\",\n              \"country\" : \"DE\"\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"orders",
														"edits",
														"{{edit-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Edits"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get OrderEdit by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/key={{edit-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"key={{edit-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update OrderEdit by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 7,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"another-key\"\n  }, {\n    \"action\" : \"addStagedAction\",\n    \"stagedAction\" : {\n      \"action\" : \"setCountry\",\n      \"country\" : \"ES\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/key={{edit-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"key={{edit-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete OrderEdit by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/key={{edit-key}}?version={{edit-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"key={{edit-key}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{edit-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Apply order edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"apply-id\", data.results[0].id); ",
													"    pm.environment.set(\"apply-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"apply-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"apply-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"apply-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"apply-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/{{apply-id}}/apply",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"{{apply-id}}",
												"apply"
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get OrderEdit by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"{{edit-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update OrderEdit by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 7,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"another-key\"\n  }, {\n    \"action\" : \"addStagedAction\",\n    \"stagedAction\" : {\n      \"action\" : \"setCountry\",\n      \"country\" : \"ES\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"{{edit-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete OrderEdit by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits/{{edit-id}}?version={{edit-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits",
												"{{edit-id}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{edit-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query edits",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create OrderEdit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"edit-id\", data.results[0].id); ",
													"    pm.environment.set(\"edit-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"edit-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"edit-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"edit-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"edit-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\" : \"order-edit-key\",\n  \"resource\" : {\n    \"typeId\" : \"order\",\n    \"id\" : \"ed454f4e-c43a-485f-a86f-046c691b1363\"\n  },\n  \"stagedActions\" : [ {\n    \"action\" : \"setCustomerEmail\",\n    \"email\" : \"user@localhost\"\n  } ],\n  \"comment\" : \"sample-comment\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/edits",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"edits"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "OrderEdit are containers for financial changes after an Order has been placed."
						},
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddDelivery",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addDelivery\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 1\n            } ],\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            },\n            \"parcels\" : [ {\n              \"measurements\" : {\n                \"heightInMillimeter\" : 11,\n                \"widthInMillimeter\" : 11\n              },\n              \"trackingData\" : {\n                \"trackingId\" : \"{{trackingId}}\",\n                \"carrier\" : \"TNT\",\n                \"provider\" : \"providerName\",\n                \"providerTransaction\" : \"{{transactionId}}\",\n                \"isReturn\" : false\n              }\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "AddItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "AddParcelToDelivery",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addParcelToDelivery\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"measurements\" : {\n              \"heightInMillimeter\" : 11,\n              \"widthInMillimeter\" : 11\n            },\n            \"trackingData\" : {\n              \"trackingId\" : \"{{trackingId}}\",\n              \"carrier\" : \"TNT\",\n              \"provider\" : \"providerName\",\n              \"providerTransaction\" : \"{{transactionId}}\",\n              \"isReturn\" : false\n            },\n            \"items\" : {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "AddPayment",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPayment\",\n            \"payment\" : {\n              \"typeId\" : \"payment\",\n              \"id\" : \"{{payment-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "AddReturnInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addReturnInfo\",\n            \"items\" : [ {\n              \"quantity\" : 1,\n              \"lineItemId\" : \"{{lineItemId}}\",\n              \"shipmentState\" : \"Returned\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "ChangeOrderState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeOrderState\",\n            \"orderState\" : \"Open\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "ChangePaymentState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changePaymentState\",\n            \"paymentState\" : \"Failed\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "ChangeShipmentState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeShipmentState\",\n            \"shipmentState\" : \"Ready\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "ImportCustomLineItemState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"importCustomLineItemState\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"state\" : [ {\n              \"quantity\" : 6,\n              \"state\" : {\n                \"typeId\" : \"state\",\n                \"id\" : \"{{state-id}}\"\n              }\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "ImportLineItemState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"importLineItemState\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"state\" : [ {\n              \"quantity\" : 5,\n              \"state\" : {\n                \"typeId\" : \"state\",\n                \"id\" : \"{{state-id}}\"\n              }\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "RemoveDelivery",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeDelivery\",\n            \"deliveryId\" : \"{{deliveryId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "RemoveItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeItemShippingAddress\",\n            \"addressKey\" : \"addressKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "RemoveParcelFromDelivery",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeParcelFromDelivery\",\n            \"parcelId\" : \"{{parcelId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "RemovePayment",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removePayment\",\n            \"payment\" : {\n              \"typeId\" : \"payment\",\n              \"id\" : \"{{payment-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetBillingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetBillingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetBillingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomField\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomType\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomLineItemShippingDetails",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemShippingDetails\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomerEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerEmail\",\n            \"email\" : \"mail@mail.com\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetCustomerId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerId\",\n            \"customerId\" : \"{{customer-id}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetDeliveryAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddress\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetDeliveryAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomField\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetDeliveryAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomType\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetDeliveryItems",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryItems\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetItemShippingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomField\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetItemShippingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomType\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomField\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomType\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetLineItemShippingDetails",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemShippingDetails\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetLocale",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetOrderNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setOrderNumber\",\n            \"orderNumber\" : \"myOrderNumber\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetParcelItems",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelItems\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetParcelMeasurements",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelMeasurements\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"measurements\" : {\n              \"heightInMillimeter\" : 11,\n              \"lengthInMillimeter\" : 11\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetParcelTrackingData",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelTrackingData\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"trackingData\" : {\n              \"trackingId\" : \"{{trackingId}}\",\n              \"carrier\" : \"TNT\",\n              \"provider\" : \"providerName\",\n              \"providerTransaction\" : \"{{transactionId}}\",\n              \"isReturn\" : false\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetReturnPaymentState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setReturnPaymentState\",\n            \"returnItemId\" : \"{{returnItemId}}\",\n            \"paymentState\" : \"NotRefunded\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetReturnShipmentState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setReturnShipmentState\",\n            \"returnItemId\" : \"{{returnItemId}}\",\n            \"shipmentState\" : \"BackInStock\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetShippingAddressCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetShippingAddressCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "SetStore",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "TransitionCustomLineItemState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionCustomLineItemState\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"quantity\" : 6,\n            \"fromState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            },\n            \"toState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "TransitionLineItemState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionLineItemState\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 3,\n            \"fromState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            },\n            \"toState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "TransitionState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "UpdateItemShippingAddress",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								},
								{
									"name": "UpdateSyncInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateSyncInfo\",\n            \"channel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Orders"
									},
									"response": []
								}
							]
						},
						{
							"name": "Create an Order by Import",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"import-id\", data.results[0].id); ",
											"    pm.environment.set(\"import-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"import-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"import-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"import-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"import-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderNumber\" : \"100000001\",\n  \"totalPrice\" : {\n    \"centAmount\" : 1000,\n    \"currencyCode\" : \"EUR\"\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/import",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"import"
									]
								},
								"description": "Create an Order by Import"
							},
							"response": []
						},
						{
							"name": "Get Order by orderNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/order-number={{order-number}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"order-number={{order-number}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "In case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n"
							},
							"response": []
						},
						{
							"name": "Update Order by orderNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/order-number={{order-number}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"order-number={{order-number}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Order by orderNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/order-number={{order-number}}?version={{order-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"order-number={{order-number}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{order-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Order by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"{{order-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Order by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/{{order-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"{{order-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Order by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders/{{order-id}}?version={{order-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders",
										"{{order-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{order-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"order-id\", data.results[0].id); ",
											"    pm.environment.set(\"order-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"order-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"order-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"order-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"order-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"orders"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creates an order from a Cart.\nThe cart must have a shipping address set before creating an order.\nWhen using the Platform TaxMode, the shipping address is used for tax calculation.\n"
							},
							"response": []
						}
					],
					"description": "An order can be created from a order, usually after a checkout process has been completed."
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddInterfaceInteraction",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addInterfaceInteraction\",\n            \"type\" : {\n              \"typeId\" : \"type\",\n              \"id\" : \"{{type-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "AddTransaction",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addTransaction\",\n            \"transaction\" : {\n              \"type\" : \"Authorization\",\n              \"amount\" : {\n                \"centAmount\" : 4000,\n                \"currencyCode\" : \"EUR\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "ChangeAmountPlanned",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAmountPlanned\",\n            \"amount\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4000\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "ChangeTransactionInteractionId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTransactionInteractionId\",\n            \"transactionId\" : \"{{transactionId}}\",\n            \"interactionId\" : \"{{newInteractionId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "ChangeTransactionState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTransactionState\",\n            \"transactionId\" : \"{{transactionId}}\",\n            \"state\" : \"Failure\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "ChangeTransactionTimestamp",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTransactionTimestamp\",\n            \"transactionId\" : \"{{transactionId}}\",\n            \"timestamp\" : \"2018-10-12T14:00:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetAnonymousId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAnonymousId\",\n            \"anonymousId\" : \"anonymousId\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetCustomer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomer\",\n            \"customer\" : {\n              \"typeId\" : \"customer\",\n              \"id\" : \"{{customer-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetInterfaceId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setInterfaceId\",\n            \"interfaceId\" : \"InterfaceID\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"String\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetMethodInfoInterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMethodInfoInterface\",\n            \"interface\" : \"MethodInfoInterfaceString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetMethodInfoMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMethodInfoMethod\",\n            \"method\" : \"MethodInfoMethodString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetMethodInfoName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMethodInfoName\",\n            \"name\" : {\n              \"de\" : \"MethodInfoNameStringDE\",\n              \"en\" : \"MethodInfoNameStringEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetStatusInterfaceCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStatusInterfaceCode\",\n            \"interfaceCode\" : \"InterfaceCodeString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "SetStatusInterfaceText",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStatusInterfaceText\",\n            \"interfaceText\" : \"InterfaceTextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								},
								{
									"name": "TransitionState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{paymentStateId}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Payments"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Payment by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/key={{payment-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"key={{payment-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Payment by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setInterfaceId\",\n    \"interfaceId\" : \"12334567890123456\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/key={{payment-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"key={{payment-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Payment by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/key={{payment-key}}?version={{payment-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"key={{payment-key}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{payment-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Payment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"{{payment-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Payment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setInterfaceId\",\n    \"interfaceId\" : \"12334567890123456\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"{{payment-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Payment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments/{{payment-id}}?version={{payment-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments",
										"{{payment-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{payment-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											"if(data.results && data.results[0] && data.results[0].transactions){",
											"    const transactions = data.results[0].transactions.filter(",
											"    (transaction) => transaction.type === 'Authorization'",
											"    );",
											"    if (transactions && transactions.length > 0) {",
											"      pm.environment.set(\"transaction-id\", transactions[transactions.length - 1].interactionId); ",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments?sort=createdAt desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "createdAt desc"
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"payment-id\", data.results[0].id); ",
											"    pm.environment.set(\"payment-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"payment-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"payment-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"payment-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"payment-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\" : \"123456\",\n  \"interfaceId\" : \"789011\",\n  \"amountPlanned\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"paymentMethodInfo\" : {\n    \"paymentInterface\" : \"STRIPE\",\n    \"method\" : \"CREDIT_CARD\",\n    \"name\" : {\n      \"en\" : \"Credit Card\"\n    }\n  },\n  \"transactions\" : [ {\n    \"timestamp\" : \"2015-10-20T08:54:24.000Z\",\n    \"type\" : \"Charge\",\n    \"amount\" : {\n      \"currencyCode\" : \"USD\",\n      \"centAmount\" : 1000\n    },\n    \"state\" : \"Pending\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/payments",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"payments"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a payment object a payment draft object has to be given with the request."
							},
							"response": []
						}
					],
					"description": "Payments hold information about the current state of receiving and/or refunding money"
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddAsset",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAsset\",\n            \"variantId\" : 1,\n            \"asset\" : {\n              \"sources\" : [ {\n                \"uri\" : \"//asset.mp4\"\n              } ],\n              \"name\" : {\n                \"de\" : \"FirstAssetDE\",\n                \"en\" : \"FirstassetEN\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "AddExternalImage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addExternalImage\",\n            \"variantId\" : 1,\n            \"image\" : {\n              \"url\" : \"//myimage.jpg\",\n              \"dimensions\" : {\n                \"w\" : 1400,\n                \"h\" : 1400\n              },\n              \"label\" : \"myImage\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "AddPrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPrice\",\n            \"variantId\" : 1,\n            \"price\" : {\n              \"value\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "AddToCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addToCategory\",\n            \"category\" : {\n              \"typeId\" : \"category\",\n              \"id\" : \"{{category-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "AddVariant",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addVariant\",\n            \"key\" : \"VariantKey\",\n            \"sku\" : \"VariantSKU\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangeAssetName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAssetName\",\n            \"assetId\" : \"{{assetId}}\",\n            \"name\" : {\n              \"de\" : \"Mein Asset\",\n              \"en\" : \"My asset\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangeAssetOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAssetOrder\",\n            \"assetOrder\" : [ \"{{assetId1}}\", \"{{assetId2}}\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangeMasterVariant",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeMasterVariant\",\n            \"variantId\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"de\" : \"Mein neuer Produkt Name\",\n              \"en\" : \"My new product name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangePrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changePrice\",\n            \"priceId\" : \"{{priceId}}\",\n            \"price\" : {\n              \"value\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              }\n            },\n            \"staged\" : true\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "ChangeSlug",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeSlug\",\n            \"slug\" : {\n              \"de\" : \"mein-neuer-produkt-slug\",\n              \"en\" : \"my-new-product-slug\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "LegacySetSku",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n                |{\n            \"action\": \"legacySetSku\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "MoveImageToPosition",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"moveImageToPosition\",\n            \"variantId\" : 1,\n            \"imageUrl\" : \"//myimage2.jpg\",\n            \"position\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "Publish",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"publish\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RemoveAsset",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeAsset\",\n            \"variantId\" : 1,\n            \"assetId\" : \"{{assetId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RemoveFromCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeFromCategory\",\n            \"category\" : {\n              \"typeId\" : \"category\",\n              \"id\" : \"{{category-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RemoveImage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeImage\",\n            \"variantId\" : 1,\n            \"imageUrl\" : \"//myimage2.jpg\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RemovePrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removePrice\",\n            \"priceId\" : \"{{priceId}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RemoveVariant",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeVariant\",\n            \"id\" : 2\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RevertStagedChanges",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"revertStagedChanges\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "RevertStagedVariantChanges",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"revertStagedVariantChanges\",\n            \"variantId\" : 2\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetCustomField\",\n            \"assetId\" : \"{{assetId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetCustomType\",\n            \"assetId\" : \"{{assetId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetDescription\",\n            \"assetId\" : \"{{assetId}}\",\n            \"description\" : {\n              \"de\" : \"Dies ist eine Asset-Beschreibung\",\n              \"en\" : \"This is an asset description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetKey\",\n            \"assetId\" : \"{{assetId}}\",\n            \"assetKey\" : \"assetKeyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetSources",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetSources\",\n            \"assetId\" : \"{{assetId}}\",\n            \"sources\" : [ {\n              \"uri\" : \"https://www.commercetools.de/ct-logo.svg\",\n              \"key\" : \"vector\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAssetTags",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAssetTags\",\n            \"assetId\" : \"{{assetId}}\",\n            \"tags\" : [ \"commercetools\", \"awesome\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAttribute",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAttribute\",\n            \"variantId\" : 1,\n            \"name\" : \"ExamplaryStringTypeAttribute\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetAttributeInAllVariants",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAttributeInAllVariants\",\n            \"name\" : \"ExamplaryStringTypeAttribute\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetCategoryOrderHint",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCategoryOrderHint\",\n            \"categoryId\" : \"{{category-id}}\",\n            \"orderHint\" : \"0.1\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"de\" : \"Dies ist eine neue Produktbeschreibung\",\n              \"en\" : \"This is a new product description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetDiscountedPrice",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDiscountedPrice\",\n            \"priceId\" : \"{{priceId}}\",\n            \"staged\" : true,\n            \"discounted\" : {\n              \"value\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              },\n              \"discount\" : {\n                \"typeId\" : \"product-discount\",\n                \"id\" : \"{{product-discount-id}}\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetImageLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setImageLabel\",\n            \"variantId\" : 2,\n            \"imageUrl\" : \"//image.png\",\n            \"label\" : \"labelString\",\n            \"staged\" : true\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"DefaultKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetMetaDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaDescription\",\n            \"metaDescription\" : {\n              \"de\" : \"meine Meta Beschreibung\",\n              \"en\" : \"my metaDescription\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetMetaKeywords",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaKeywords\",\n            \"metaKeywords\" : {\n              \"de\" : \"mein MetaKeyword\",\n              \"en\" : \"my metaKeeyword\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetMetaTitle",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMetaTitle\",\n            \"metaTitle\" : {\n              \"de\" : \"mein MetaTitel\",\n              \"en\" : \"my metaTitle\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetPrices",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setPrices\",\n            \"variantId\" : 1,\n            \"prices\" : [ {\n              \"value\" : {\n                \"currencyCode\" : \"USD\",\n                \"centAmount\" : 3100\n              }\n            }, {\n              \"value\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              }\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetProductPriceCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setProductPriceCustomField\",\n            \"priceId\" : \"{{priceId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetProductPriceCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setProductPriceCustomType\",\n            \"priceId\" : \"{{priceId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetProductVariantKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setProductVariantKey\",\n            \"variantId\" : 1,\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetSearchKeywords",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSearchKeywords\",\n            \"searchKeywords\" : {\n              \"en\" : [ {\n                \"text\" : \"Super Keyword\"\n              }, {\n                \"text\" : \"What a keyword\",\n                \"suggestTokenizer\" : {\n                  \"type\" : \"whitespace\"\n                }\n              } ],\n              \"de\" : [ {\n                \"text\" : \"Ein super Schlüsselwort\",\n                \"suggestTokenizer\" : {\n                  \"type\" : \"custom\",\n                  \"inputs\" : [ \"wow wow wow\", \"super genial\", \"der Wahnsinn\" ]\n                }\n              } ]\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetSku",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSku\",\n            \"variantId\" : 1,\n            \"sku\" : \"SKU\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "SetTaxCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTaxCategory\",\n            \"taxCategory\" : {\n              \"typeId\" : \"tax-category\",\n              \"id\" : \"{{tax-category-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "TransitionState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								},
								{
									"name": "Unpublish",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"unpublish\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"products",
												"{{product-id}}"
											],
											"query": [
												{
													"key": "priceCurrency",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCountry",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceCustomerGroup",
													"value": "",
													"disabled": true
												},
												{
													"key": "priceChannel",
													"value": "",
													"disabled": true
												},
												{
													"key": "localeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "storeProjection",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Products"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Product by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/key={{product-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"key={{product-key}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets the full representation of a product by Key."
							},
							"response": []
						},
						{
							"name": "Update Product by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 2,\n  \"actions\" : [ {\n    \"action\" : \"setDescription\",\n    \"description\" : {\n      \"en\" : \"The best product ever!\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/key={{product-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"key={{product-key}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Product by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/key={{product-key}}?version={{product-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"key={{product-key}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{product-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Upload a product image",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"image-id\", data.results[0].id); ",
											"    pm.environment.set(\"image-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"image-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"image-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"image-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"image-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/{{image-id}}/images",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"{{image-id}}",
										"images"
									],
									"query": [
										{
											"key": "filename",
											"value": "",
											"disabled": true
										},
										{
											"key": "variant",
											"value": "",
											"disabled": true
										},
										{
											"key": "sku",
											"value": "",
											"disabled": true
										},
										{
											"key": "staged",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.\n"
							},
							"response": []
						},
						{
							"name": "Get Product by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"{{product-id}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets the full representation of a product by ID."
							},
							"response": []
						},
						{
							"name": "Update Product by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 2,\n  \"actions\" : [ {\n    \"action\" : \"setDescription\",\n    \"description\" : {\n      \"en\" : \"The best product ever!\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"{{product-id}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Product by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products/{{product-id}}?version={{product-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products",
										"{{product-id}}"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{product-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query products",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "You can use the query endpoint to get the full representations of products.\nREMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,\nthe query API lacks like sorting on custom attributes, etc.\n"
							},
							"response": []
						},
						{
							"name": "Create Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\" : {\n    \"id\" : \"24f510c3-f334-4099-94e2-d6224a8eb919\",\n    \"typeId\" : \"product-type\"\n  },\n  \"categories\" : [ {\n    \"typeId\" : \"category\",\n    \"id\" : \"24f510c3-f334-4099-94e2-d6224a8eb919\"\n  } ],\n  \"name\" : {\n    \"en\" : \"Some Product\"\n  },\n  \"slug\" : {\n    \"en\" : \"product_slug_<random-uuid>\"\n  },\n  \"masterVariant\" : {\n    \"sku\" : \"SKU-1\",\n    \"prices\" : [ {\n      \"value\" : {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 4200\n      }\n    } ],\n    \"images\" : [ {\n      \"url\" : \"http://my.custom.cdn.net/master.png\",\n      \"label\" : \"Master Image\",\n      \"dimensions\" : {\n        \"w\" : 303,\n        \"h\" : 197\n      }\n    } ]\n  },\n  \"variants\" : [ {\n    \"images\" : [ {\n      \"url\" : \"http://my.custom.cdn.net/variant.png\",\n      \"label\" : \"Variant Image\",\n      \"dimensions\" : {\n        \"w\" : 303,\n        \"h\" : 197\n      }\n    } ]\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						}
					],
					"description": "Products are the sellable goods in an e-commerce project on CTP. This document explains some design concepts\nof products on CTP and describes the available HTTP APIs for working with them.\n"
				},
				{
					"name": "Product-discounts",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeIsActive",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeIsActive\",\n            \"isActive\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"de\" : \"NewProductDiscountDE\",\n              \"en\" : \"NewProductDiscountEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangePredicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changePredicate\",\n            \"predicate\" : \"product.id = \"{{product-id}}\"\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeSortOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeSortOrder\",\n            \"sortOrder\" : \"0.3\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "ChangeValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeValue\",\n            \"value\" : {\n              \"type\" : \"relative\",\n              \"permyriad\" : 2000\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"de\" : \"New Product Discount Description DE\",\n              \"en\" : \"New Product Discount Description EN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setKey\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidFrom",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFrom\",\n            \"validFrom\" : \"2018-10-12T14:05:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidFromAndUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidFromAndUntil\",\n            \"validFrom\" : \"2018-10-12T14:00:00.000Z\",\n            \"validUntil\" : \"2018-10-12T14:05:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								},
								{
									"name": "SetValidUntil",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-discount-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-discount-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-discount-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-discount-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setValidUntil\",\n            \"validUntil\" : \"2018-10-12T14:05:00.000Z\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-discounts",
												"{{product-discount-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductDiscounts"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get matching product discounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"matching-id\", data.results[0].id); ",
											"    pm.environment.set(\"matching-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"matching-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"matching-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"matching-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"matching-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"123456\",\n  \"variantId\": 1,\n  \"staged\": false,\n  \"price\": {\n    \"value\": {\n      \"type\": \"centPrecision\",\n      \"centAmount\": 100,\n      \"currencyCode\": \"EUR\",\n      \"fractionDigits\": 2\n    },\n  \"id\": \"2474c2c3-d424-49af-b90a-b71bc74cf51b\"\n  }\n}\n"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/matching",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"matching"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ProductDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/key={{product-discount-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"key={{product-discount-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ProductDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"absolute\",\n      \"money\" : [ {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 100\n      } ]\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/key={{product-discount-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"key={{product-discount-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ProductDiscount by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/key={{product-discount-key}}?version={{product-discount-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"key={{product-discount-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{product-discount-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ProductDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"{{product-discount-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ProductDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"absolute\",\n      \"money\" : [ {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 100\n      } ]\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"{{product-discount-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ProductDiscount by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts/{{product-discount-id}}?version={{product-discount-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts",
										"{{product-discount-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{product-discount-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query product-discounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create ProductDiscount",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-discount-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-discount-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-discount-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-discount-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-discount-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-discount-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\" : {\n    \"type\" : \"absolute\",\n    \"money\" : [ {\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 100\n    } ]\n  },\n  \"predicate\" : \"1=1\",\n  \"name\" : {\n    \"en\" : \"test-discount1\"\n  },\n  \"description\" : {\n    \"en\" : \"test-discount1\"\n  },\n  \"isActive\" : false,\n  \"sortOrder\" : \"0.9534\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-discounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-discounts"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Product discounts are used to change certain product prices."
				},
				{
					"name": "Product-projections",
					"item": [
						{
							"name": "Search Products by post",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"search-id\", data.results[0].id); ",
											"    pm.environment.set(\"search-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"search-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"search-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"search-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"search-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections/search",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections",
										"search"
									]
								},
								"description": "Search Product Projection"
							},
							"response": []
						},
						{
							"name": "Search Products by get",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"search-id\", data.results[0].id); ",
											"    pm.environment.set(\"search-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"search-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"search-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"search-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"search-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections/search",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections",
										"search"
									],
									"query": [
										{
											"key": "fuzzy",
											"value": "",
											"disabled": true
										},
										{
											"key": "fuzzyLevel",
											"value": "",
											"disabled": true
										},
										{
											"key": "markMatchingVariants",
											"value": "",
											"disabled": true
										},
										{
											"key": "staged",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter.facets",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter.query",
											"value": "",
											"disabled": true
										},
										{
											"key": "facet",
											"value": "",
											"disabled": true
										},
										{
											"key": "/text.[a-z]{2}(-[A-Z]{2})?/",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Search Product Projection"
							},
							"response": []
						},
						{
							"name": "Get suggestion keywords",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"suggest-id\", data.results[0].id); ",
											"    pm.environment.set(\"suggest-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"suggest-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"suggest-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"suggest-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"suggest-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections/suggest",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections",
										"suggest"
									],
									"query": [
										{
											"key": "fuzzy",
											"value": "",
											"disabled": true
										},
										{
											"key": "staged",
											"value": "",
											"disabled": true
										},
										{
											"key": "/searchKeywords.[a-z]{2}(-[A-Z]{2})?/",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ProductProjection by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-projection-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-projection-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-projection-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-projection-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-projection-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-projection-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections/key={{product-projection-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections",
										"key={{product-projection-key}}"
									],
									"query": [
										{
											"key": "staged",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets the current or staged representation of a product found by Key.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n"
							},
							"response": []
						},
						{
							"name": "Get ProductProjection by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-projection-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-projection-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-projection-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-projection-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-projection-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-projection-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections/{{product-projection-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections",
										"{{product-projection-id}}"
									],
									"query": [
										{
											"key": "staged",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets the current or staged representation of a product in a catalog by ID.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n"
							},
							"response": []
						},
						{
							"name": "Query product-projections",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-projection-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-projection-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-projection-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-projection-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-projection-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-projection-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-projections",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-projections"
									],
									"query": [
										{
											"key": "staged",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "You can use the product projections query endpoint to get the current or staged representations of Products.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n"
							},
							"response": []
						}
					],
					"description": "A projected representation of a product shows the product with its current or staged data. The current or staged\nrepresentation of a product in a catalog is called a product projection.\n"
				},
				{
					"name": "Product-types",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddAttributeDefinition",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addAttributeDefinition\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "AddLocalizedEnumValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addLocalizedEnumValue\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "AddPlainEnumValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addPlainEnumValue\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeAttributeConstraint",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeAttributeConstraint\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeAttributeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeAttributeName\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeAttributeOrderByName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeAttributeOrderByName\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeDescription\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeEnumKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeEnumKey\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeInputHint",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeInputHint\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeIsSearchable",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeIsSearchable\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLabel\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeLocalizedEnumValueLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLocalizedEnumValueLabel\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeLocalizedEnumValueOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLocalizedEnumValueOrder\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeName\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangePlainEnumValueLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changePlainEnumValueLabel\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "ChangePlainEnumValueOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changePlainEnumValueOrder\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "RemoveAttributeDefinition",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeAttributeDefinition\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "RemoveEnumValues",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeEnumValues\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "SetInputTip",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setInputTip\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
													"    pm.environment.set(\"product-type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"product-type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"product-type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"product-type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{product-type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setKey\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"product-types",
												"{{product-type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ProductTypes"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get ProductType by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/key={{product-type-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"key={{product-type-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ProductType by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"new-product-type-name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/key={{product-type-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"key={{product-type-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ProductType by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/key={{product-type-key}}?version={{product-type-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"key={{product-type-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{product-type-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ProductType by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"{{product-type-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ProductType by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"new-product-type-name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"{{product-type-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ProductType by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types/{{product-type-id}}?version={{product-type-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types",
										"{{product-type-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{product-type-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query product-types",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create ProductType",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"test_product_type\",\n  \"description\" : \"Test product type.\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : false,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"size\",\n    \"label\" : {\n      \"en\" : \"The right size is important.\"\n    },\n    \"isRequired\" : false,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Product Types are used to describe common characteristics, most importantly common custom attributes,\nof many concrete products.\n"
				},
				{
					"name": "Reviews",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "SetAuthorName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAuthorName\",\n            \"authorName\" : \"myAuthorName\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetCustomer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomer\",\n            \"customer\" : {\n              \"typeId\" : \"customer\",\n              \"id\" : \"0c2eaad4-833c-43c1-98a4-5d03f57e9329\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"myReviewKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetLocale",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"ISO-code locale\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetRating",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setRating\",\n            \"rating\" : 60\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetTarget",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTarget\",\n            \"target\" : {\n              \"typeId\" : \"product\",\n              \"id\" : \"{{product-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetText",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setText\",\n            \"text\" : \"reviewText\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "SetTitle",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTitle\",\n            \"title\" : \"reviewTitle\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								},
								{
									"name": "TransitionState",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"review-id\", data.results[0].id); ",
													"    pm.environment.set(\"review-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"review-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"review-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"review-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"review-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{review-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"reviews",
												"{{review-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Reviews"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Review by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/key={{review-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"key={{review-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Review by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setAuthorName\",\n    \"authorName\" : \"John Doe\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/key={{review-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"key={{review-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Review by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/key={{review-key}}?version={{review-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"key={{review-key}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{review-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Review by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"{{review-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Review by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setAuthorName\",\n    \"authorName\" : \"John Doe\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"{{review-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Review by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews/{{review-id}}?version={{review-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews",
										"{{review-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{review-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query reviews",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Review",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"review-id\", data.results[0].id); ",
											"    pm.environment.set(\"review-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"review-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"review-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"review-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"review-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorName\" : \"John Doe\",\n  \"title\" : \"Incredible\",\n  \"text\" : \"Best product ever\",\n  \"rating\" : 5,\n  \"target\" : {\n    \"typeId\" : \"product\",\n    \"id\" : \"8fddacac-6ef5-4e66-af6e-124452123456\"\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"reviews"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Reviews are used to evaluate products and channels."
				},
				{
					"name": "Shipping-methods",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddShippingRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addShippingRate\",\n            \"zone\" : {\n              \"typeId\" : \"zone\",\n              \"id\" : \"{{zone-id}}\"\n            },\n            \"shippingRate\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "AddZone",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addZone\",\n            \"zone\" : {\n              \"typeId\" : \"zone\",\n              \"id\" : \"{{zone-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "ChangeIsDefault",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeIsDefault\",\n            \"isDefault\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : \"nameString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "ChangeTaxCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxCategory\",\n            \"taxCategory\" : {\n              \"id\" : \"{{tax-category-id}}\",\n              \"typeId\" : \"tax-category\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "RemoveShippingRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeShippingRate\",\n            \"zone\" : {\n              \"typeId\" : \"zone\",\n              \"id\" : \"{{zone-id}}\"\n            },\n            \"shippingRate\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4000\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "RemoveZone",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeZone\",\n            \"zone\" : {\n              \"typeId\" : \"zone\",\n              \"id\" : \"{{zone-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : \"descriptionString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetLocalizedDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocalizedDescription\",\n            \"localizedDescription\" : {\n              \"en\" : \"localizedDescriptionString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetLocalizedName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocalizedName\",\n            \"localizedName\" : {\n              \"en\" : \"localizedNameString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								},
								{
									"name": "SetPredicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
													"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shipping-method-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shipping-method-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shipping-method-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shipping-method-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setPredicate\",\n            \"predicate\" : \"1=1\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shipping-methods",
												"{{shipping-method-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShippingMethods"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get ShippingMethod by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/key={{shipping-method-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"key={{shipping-method-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ShippingMethod by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/key={{shipping-method-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"key={{shipping-method-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ShippingMethod by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/key={{shipping-method-key}}?version={{shipping-method-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"key={{shipping-method-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{shipping-method-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ShippingMethods for a cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"matching-cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"matching-cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"matching-cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"matching-cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"matching-cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"matching-cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/matching-cart?cartId=",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"matching-cart"
									],
									"query": [
										{
											"key": "cartId",
											"value": ""
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ShippingMethods for an order edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"matching-orderedit-id\", data.results[0].id); ",
											"    pm.environment.set(\"matching-orderedit-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"matching-orderedit-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"matching-orderedit-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"matching-orderedit-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"matching-orderedit-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/matching-orderedit?orderEditId=&country=",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"matching-orderedit"
									],
									"query": [
										{
											"key": "orderEditId",
											"value": ""
										},
										{
											"key": "country",
											"value": ""
										},
										{
											"key": "state",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ShippingMethods for a location",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"matching-location-id\", data.results[0].id); ",
											"    pm.environment.set(\"matching-location-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"matching-location-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"matching-location-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"matching-location-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"matching-location-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/matching-location?country=",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"matching-location"
									],
									"query": [
										{
											"key": "country",
											"value": ""
										},
										{
											"key": "state",
											"value": "",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ShippingMethod by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"{{shipping-method-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update ShippingMethod by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"{{shipping-method-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ShippingMethod by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods/{{shipping-method-id}}?version={{shipping-method-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods",
										"{{shipping-method-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{shipping-method-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query shipping-methods",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create ShippingMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
											"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shipping-method-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shipping-method-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shipping-method-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"DHL\",\n  \"description\" : \"Standard delivery\",\n  \"taxCategory\" : {\n    \"typeId\" : \"tax-category\",\n    \"id\" : \"5a21f15b-34f8-4b7f-9407-d1eb82a73eba\"\n  },\n  \"zoneRates\" : [ {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"5cb532be-c680-43ab-ba14-b664bb03dc35\"\n    },\n    \"shippingRates\" : [ {\n      \"price\" : {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 570\n      }\n    } ]\n  }, {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"ebe01381-82be-4e63-9993-d1eb8f8e588b\"\n    },\n    \"shippingRates\" : [ {\n      \"price\" : {\n        \"currencyCode\" : \"USD\",\n        \"centAmount\" : 990\n      }\n    } ]\n  } ],\n  \"isDefault\" : false\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shipping-methods",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shipping-methods"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Shipping Methods define where orders can be shipped and what the costs are."
				},
				{
					"name": "Shopping-lists",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addLineItem\",\n            \"productId\" : \"{{product-id}}\",\n            \"variantId\" : 1,\n            \"quantity\" : 2\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "AddTextLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addTextLineItem\",\n            \"name\" : {\n              \"de\" : \"textDE\",\n              \"en\" : \"textEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeLineItemQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLineItemQuantity\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 8\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeLineItemsOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLineItemsOrder\",\n            \"lineItemOrder\" : [ \"{{lineItemId2}}\", \"{{lineItemId}}\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"de\" : \"Name\",\n              \"en\" : \"name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeTextLineItemName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTextLineItemName\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"name\" : {\n              \"de\" : \"name\",\n              \"en\" : \"name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeTextLineItemQuantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTextLineItemQuantity\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "ChangeTextLineItemsOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTextLineItemsOrder\",\n            \"textLineItemOrder\" : [ \"{{lineItemId2}}\", \"{{lineItemId}}\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "RemoveLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeLineItem\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 2\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "RemoveTextLineItem",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeTextLineItem\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetAnonymousId",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAnonymousId\",\n            \"anonymousId\" : \"ThisIsMyID\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetCustomer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomer\",\n            \"customer\" : {\n              \"typeId\" : \"customer\",\n              \"id\" : \"{{customer-id}}\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetDeleteDaysAfterLastModification",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeleteDaysAfterLastModification\",\n            \"deleteDaysAfterLastModification\" : 10\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"en\" : \"description\",\n              \"de\" : \"Beschreibung\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"key\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomField\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomType\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetSlug",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSlug\",\n            \"slug\" : {\n              \"en\" : \"en-slug\",\n              \"de\" : \"de-slug\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetStore",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetTextLineItemCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTextLineItemCustomField\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetTextLineItemCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTextLineItemCustomType\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								},
								{
									"name": "SetTextLineItemDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTextLineItemDescription\",\n            \"textLineItemId\" : \"{{lineItemId}}\",\n            \"description\" : {\n              \"de\" : \"Beschreibung\",\n              \"en\" : \"description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post ShoppingLists"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get ShoppingList by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/key={{shopping-list-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"key={{shopping-list-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets a shopping list by Key."
							},
							"response": []
						},
						{
							"name": "Update ShoppingList by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/key={{shopping-list-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"key={{shopping-list-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Update a shopping list found by its Key."
							},
							"response": []
						},
						{
							"name": "Delete ShoppingList by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/key={{shopping-list-key}}?version={{shopping-list-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"key={{shopping-list-key}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{shopping-list-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get ShoppingList by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"{{shopping-list-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Gets a shopping list by ID."
							},
							"response": []
						},
						{
							"name": "Update ShoppingList by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"{{shopping-list-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete ShoppingList by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists/{{shopping-list-id}}?version={{shopping-list-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists",
										"{{shopping-list-id}}"
									],
									"query": [
										{
											"key": "dataErasure",
											"value": "",
											"disabled": true
										},
										{
											"key": "version",
											"value": "{{shopping-list-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query shopping-lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create ShoppingList",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
											"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"shopping-list-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"shopping-list-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"shopping-list-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/shopping-lists",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"shopping-lists"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "shopping-lists e.g. for wishlist support"
				},
				{
					"name": "States",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addRoles\",\n            \"roles\" : [ \"ReviewIncludedInStatistics\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "ChangeInitial",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeInitial\",\n            \"initial\" : false\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "ChangeKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeKey\",\n            \"key\" : \"ChangedStateKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "ChangeType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeType\",\n            \"type\" : \"ReviewState\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "RemoveRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeRoles\",\n            \"roles\" : [ \"ReviewIncludedInStatistics\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"de\" : \"State Beschreibung\",\n              \"en\" : \"State description\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "SetName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setName\",\n            \"name\" : {\n              \"de\" : \"State Name\",\n              \"en\" : \"State name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "SetRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setRoles\",\n            \"roles\" : [ \"ReviewIncludedInStatistics\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								},
								{
									"name": "SetTransitions",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"state-id\", data.results[0].id); ",
													"    pm.environment.set(\"state-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"state-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"state-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"state-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"state-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTransitions\",\n            \"transitions\" : [ {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }, {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id2}}\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"states",
												"{{state-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post States"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get State by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/key={{state-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"key={{state-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update State by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/key={{state-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"key={{state-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete State by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/key={{state-key}}?version={{state-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"key={{state-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{state-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get State by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"{{state-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update State by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/{{state-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"{{state-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete State by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states/{{state-id}}?version={{state-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states",
										"{{state-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{state-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query states",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create State",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"state-id\", data.results[0].id); ",
											"    pm.environment.set(\"state-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"state-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"state-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"state-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"state-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\" : \"test-state\",\n  \"type\" : \"ProductState\",\n  \"roles\" : [ ],\n  \"initial\" : true\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/states",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"states"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "The commercetools platform allows you to model states of certain objects, such as orders, line items, products,\nreviews, and payments in order to define finite state machines reflecting the business logic you'd like to\nimplement.\n"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeDestination",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
													"    pm.environment.set(\"subscription-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"subscription-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"subscription-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"subscription-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{subscription-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeDestination\",\n            \"destination\" : {\n              \"type\" : \"SQS\",\n              \"queueUrl\" : \"https://...\",\n              \"accessKey\" : \"{{accessKey}}\",\n              \"accessSecret\" : \"secretString\",\n              \"region\" : \"regionA\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"subscriptions",
												"{{subscription-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Subscriptions"
									},
									"response": []
								},
								{
									"name": "SetChanges",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
													"    pm.environment.set(\"subscription-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"subscription-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"subscription-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"subscription-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{subscription-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setChanges\",\n            \"changes\" : [ {\n              \"resourceTypeId\" : \"channel\"\n            }, {\n              \"resourceTypeId\" : \"product\"\n            }, {\n              \"resourceTypeId\" : \"payment\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"subscriptions",
												"{{subscription-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Subscriptions"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
													"    pm.environment.set(\"subscription-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"subscription-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"subscription-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"subscription-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{subscription-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"subscriptions",
												"{{subscription-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Subscriptions"
									},
									"response": []
								},
								{
									"name": "SetMessages",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
													"    pm.environment.set(\"subscription-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"subscription-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"subscription-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"subscription-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{subscription-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMessages\",\n            \"messages\" : [ {\n              \"resourceTypeId\" : \"product\",\n              \"types\" : [ \"ProductCreated\" ]\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"subscriptions",
												"{{subscription-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Subscriptions"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Subscription by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/key={{subscription-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"key={{subscription-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the representation of a subscription by its key."
							},
							"response": []
						},
						{
							"name": "Update Subscription by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"queue-key\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/key={{subscription-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"key={{subscription-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Subscription by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/key={{subscription-key}}?version={{subscription-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"key={{subscription-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{subscription-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Subscription by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"{{subscription-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the representation of a subscription by its id."
							},
							"response": []
						},
						{
							"name": "Update Subscription by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"queue-key\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"{{subscription-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Subscription by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions/{{subscription-id}}?version={{subscription-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions",
										"{{subscription-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{subscription-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"subscription-id\", data.results[0].id); ",
											"    pm.environment.set(\"subscription-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"subscription-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"subscription-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"subscription-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"subscription-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"destination\" : {\n    \"type\" : \"IronMQ\",\n    \"uri\" : \"https://queue-uri\"\n  },\n  \"messages\" : [ {\n    \"resourceTypeId\" : \"product\",\n    \"types\" : [ ]\n  } ],\n  \"key\" : \"test-queue\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/subscriptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"subscriptions"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.\nIn order to test that the destination is correctly configured, a test message will be put into the queue.\nIf the message could not be delivered, the subscription will not be created.\nThe payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.\nCurrently, a maximum of 25 subscriptions can be created per project.\n"
							},
							"response": []
						}
					],
					"description": "Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice"
				},
				{
					"name": "Tax-categories",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addTaxRate\",\n            \"taxRate\" : {\n              \"name\" : \"TaxRateName\",\n              \"amount\" : 0.3,\n              \"includedInPrice\" : true,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : \"name\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								},
								{
									"name": "RemoveTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeTaxRate\",\n            \"taxRateId\" : \"{{taxRateID}}\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								},
								{
									"name": "ReplaceTaxRate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"replaceTaxRate\",\n            \"taxRateId\" : \"{{taxRateID}}\",\n            \"taxRate\" : {\n              \"name\" : \"TaxRateName\",\n              \"amount\" : 0.4,\n              \"includedInPrice\" : true,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : \"new Description\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
													"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"tax-category-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"tax-category-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"tax-category-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{tax-category-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"tax-categories",
												"{{tax-category-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post TaxCategories"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get TaxCategory by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/key={{tax-category-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"key={{tax-category-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update TaxCategory by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/key={{tax-category-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"key={{tax-category-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete TaxCategory by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/key={{tax-category-key}}?version={{tax-category-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"key={{tax-category-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{tax-category-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get TaxCategory by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"{{tax-category-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update TaxCategory by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"{{tax-category-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete TaxCategory by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories/{{tax-category-id}}?version={{tax-category-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories",
										"{{tax-category-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{tax-category-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query tax-categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create TaxCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
											"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"tax-category-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"tax-category-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"tax-category-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"test-tax-category\",\n  \"rates\" : [ {\n    \"name\" : \"test-tax-category\",\n    \"amount\" : 0.2,\n    \"includedInPrice\" : true,\n    \"country\" : \"DE\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/tax-categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"tax-categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Tax Categories define how products are to be taxed in different countries."
				},
				{
					"name": "Types",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddEnumValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addEnumValue\",\n            \"fieldName\" : \"CustomENumField\",\n            \"value\" : {\n              \"key\" : \"NewENumKey\",\n              \"label\" : \"NewENumLabel\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "AddFieldDefinition",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addFieldDefinition\",\n            \"fieldDefinition\" : {\n              \"type\" : {\n                \"name\" : \"LocalizedString\"\n              },\n              \"name\" : \"fieldDefinitionName\",\n              \"label\" : {\n                \"de\" : \"labelDE\",\n                \"en\" : \"labelEN\"\n              },\n              \"required\" : false,\n              \"inputHint\" : \"MultiLine\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "AddLocalizedEnumValue",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addLocalizedEnumValue\",\n            \"fieldName\" : \"CustomLeNumField\",\n            \"value\" : {\n              \"key\" : \"NewLocalizedEnumKeyString\",\n              \"label\" : {\n                \"en\" : \"NewLocalizedEnumLabelEN\",\n                \"de\" : \"NewLocalizedEnumLabelDE\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeEnumValueLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeEnumValueLabel\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeEnumValueOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeEnumValueOrder\",\n            \"fieldName\" : \"CustomENumField\",\n            \"keys\" : [ \"neweNumKey\", \"NewENumKey\", \"enum2\", \"enum1\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeFieldDefinitionOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeFieldDefinitionOrder\",\n            \"fieldNames\" : [ \"CustomENumField\", \"CustomLeNumField\", \"CustomTextField\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeInputHint",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeInputHint\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeKey\",\n            \"key\" : \"NewKey\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLabel\",\n            \"fieldName\" : \"CustomTextField\",\n            \"label\" : {\n              \"de\" : \"NewLabelDE\",\n              \"en\" : \"NewLabelEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeLocalizedEnumValueLabel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLocalizedEnumValueLabel\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeLocalizedEnumValueOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLocalizedEnumValueOrder\",\n            \"fieldName\" : \"CustomLeNumField\",\n            \"keys\" : [ \"newleNumKey\", \"NewLocalizedEnumKeyString\", \"lenum2\", \"lenum1\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : {\n              \"en\" : \"NameDE\",\n              \"de\" : \"NameEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "RemoveFieldDefinition",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeFieldDefinition\",\n            \"fieldName\" : \"fieldDefinitionName\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"type-id\", data.results[0].id); ",
													"    pm.environment.set(\"type-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"type-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"type-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"type-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"type-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{type-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : {\n              \"de\" : \"DescriptionDE\",\n              \"en\" : \"DescriptionEN\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"types",
												"{{type-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Types"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Type by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/key={{type-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"key={{type-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Type by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/key={{type-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"key={{type-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Type by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/key={{type-key}}?version={{type-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"key={{type-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{type-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Type by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"{{type-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Type by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/{{type-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"{{type-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Type by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types/{{type-id}}?version={{type-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types",
										"{{type-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{type-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query types",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\" : \"lineitemtype\",\n  \"name\" : {\n    \"en\" : \"lineitem\"\n  },\n  \"description\" : {\n    \"en\" : \"description\"\n  },\n  \"resourceTypeIds\" : [ \"line-item\" ],\n  \"fieldDefinitions\" : [ {\n    \"name\" : \"offer_name\",\n    \"label\" : {\n      \"en\" : \"offer_name\"\n    },\n    \"required\" : false,\n    \"type\" : {\n      \"name\" : \"String\"\n    },\n    \"inputHint\" : \"SingleLine\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Types define custom fields that are used to enhance resources as you need."
				},
				{
					"name": "Zones",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddLocation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"zone-id\", data.results[0].id); ",
													"    pm.environment.set(\"zone-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"zone-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"zone-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"zone-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"zone-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{zone-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addLocation\",\n            \"location\" : {\n              \"country\" : \"AT\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"zones",
												"{{zone-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Zones"
									},
									"response": []
								},
								{
									"name": "ChangeName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"zone-id\", data.results[0].id); ",
													"    pm.environment.set(\"zone-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"zone-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"zone-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"zone-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"zone-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{zone-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeName\",\n            \"name\" : \"changedName\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"zones",
												"{{zone-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Zones"
									},
									"response": []
								},
								{
									"name": "RemoveLocation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"zone-id\", data.results[0].id); ",
													"    pm.environment.set(\"zone-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"zone-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"zone-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"zone-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"zone-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{zone-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeLocation\",\n            \"location\" : {\n              \"country\" : \"AT\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"zones",
												"{{zone-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Zones"
									},
									"response": []
								},
								{
									"name": "SetDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"zone-id\", data.results[0].id); ",
													"    pm.environment.set(\"zone-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"zone-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"zone-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"zone-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"zone-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{zone-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDescription\",\n            \"description\" : \"new ZoneDescription\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"zones",
												"{{zone-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Zones"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"zone-id\", data.results[0].id); ",
													"    pm.environment.set(\"zone-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"zone-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"zone-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"zone-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"zone-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{zone-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"zones",
												"{{zone-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Zones"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Zone by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/key={{zone-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"key={{zone-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Zone by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/key={{zone-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"key={{zone-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Zone by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/key={{zone-key}}?version={{zone-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"key={{zone-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{zone-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Zone by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"{{zone-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Zone by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"{{zone-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Zone by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones/{{zone-id}}?version={{zone-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones",
										"{{zone-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{zone-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query zones",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Zone",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"zone-id\", data.results[0].id); ",
											"    pm.environment.set(\"zone-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"zone-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"zone-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"zone-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"zone-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"US\",\n  \"locations\" : [ {\n    \"country\" : \"US\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/zones",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"zones"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Zones allow defining ShippingRates for specific Locations."
				},
				{
					"name": "Me",
					"item": [
						{
							"name": "Password",
							"item": [
								{
									"name": "Reset my Customer's Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"reset-id\", data.results[0].id); ",
													"    pm.environment.set(\"reset-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"reset-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"reset-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"reset-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"reset-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/password/reset",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"password",
												"reset"
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Change my customers password",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"password-id\", data.results[0].id); ",
													"    pm.environment.set(\"password-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"password-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"password-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"password-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"password-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/password",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"password"
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "null"
						},
						{
							"name": "Carts",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddDiscountCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addDiscountCode\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "AddItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addItemShippingAddress\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "AddLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "AddPayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addPayment\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "ApplyDeltaToLineItemShippingDetailsTargets",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"applyDeltaToLineItemShippingDetailsTargets\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "ChangeLineItemQuantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLineItemQuantity\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "ChangeTaxMode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeTaxMode\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "Recalculate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"recalculate\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "RemoveDiscountCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeDiscountCode\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "RemoveItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeItemShippingAddress\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "RemoveLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "RemovePayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removePayment\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetBillingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setBillingAddress\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetCountry",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCountry\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomType\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetCustomerEmail",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomerEmail\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetDeleteDaysAfterLastModification",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setDeleteDaysAfterLastModification\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomType\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetLineItemDistributionChannel",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemDistributionChannel\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetLineItemShippingDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemShippingDetails\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetLocale",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLocale\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setShippingAddress\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "SetShippingMethod",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setShippingMethod\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										},
										{
											"name": "UpdateItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"updateItemShippingAddress\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Carts"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get my cart by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/key={{cart-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my cart by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/key={{cart-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my cart by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/key={{cart-key}}?version={{cart-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{cart-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get my cart by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my cart by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my cart by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts/{{cart-id}}?version={{cart-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{cart-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query my carts",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create my cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currency\" : \"EUR\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/carts",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"carts"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "A shopping cart holds product variants and can be ordered."
						},
						{
							"name": "Orders",
							"item": [
								{
									"name": "Get my order by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query my orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/orders",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"orders"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create my order",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/orders",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"orders"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "An order can be created from a cart, usually after a checkout process has been completed."
						},
						{
							"name": "Payments",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddTransaction",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addTransaction\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										},
										{
											"name": "ChangeAmountPlanned",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeAmountPlanned\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										},
										{
											"name": "SetMethodInfoInterface",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setMethodInfoInterface\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										},
										{
											"name": "SetMethodInfoMethod",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setMethodInfoMethod\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										},
										{
											"name": "SetMethodInfoName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"payment-id\", data.results[0].id); ",
															"    pm.environment.set(\"payment-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"payment-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"payment-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"payment-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"payment-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{payment-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setMethodInfoName\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"payments",
														"{{payment-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post Payments"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get my payment by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/key={{payment-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"key={{payment-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my payment by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setMethodInfoMethod\",\n    \"method\" : \"12334567890123456\"\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/key={{payment-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"key={{payment-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my payment by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/key={{payment-key}}?version={{payment-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"key={{payment-key}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{payment-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get my payment by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my payment by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setMethodInfoMethod\",\n    \"method\" : \"12334567890123456\"\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my payment by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments/{{payment-id}}?version={{payment-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments",
												"{{payment-id}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{payment-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query my payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create my payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"payment-id\", data.results[0].id); ",
													"    pm.environment.set(\"payment-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"payment-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"payment-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"payment-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"payment-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amountPlanned\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"paymentMethodInfo\" : {\n    \"paymentInterface\" : \"STRIPE\",\n    \"method\" : \"CREDIT_CARD\",\n    \"name\" : {\n      \"en\" : \"Credit Card\"\n    }\n  },\n  \"transaction\" : {\n    \"timestamp\" : \"2015-10-20T08:54:24.000Z\",\n    \"type\" : \"Charge\",\n    \"amount\" : {\n      \"currencyCode\" : \"USD\",\n      \"centAmount\" : 1000\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/payments",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"payments"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "The My Payments endpoint creates and provides access to payments scoped to a specific user."
						},
						{
							"name": "Shopping-lists",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "AddTextLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addTextLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeLineItemQuantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLineItemQuantity\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeLineItemsOrder",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLineItemsOrder\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeName\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeTextLineItemName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeTextLineItemName\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeTextLineItemQuantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeTextLineItemQuantity\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "ChangeTextLineItemsOrder",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeTextLineItemsOrder\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "RemoveLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "RemoveTextLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeTextLineItem\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomType\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetDeleteDaysAfterLastModification",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setDeleteDaysAfterLastModification\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetDescription",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setDescription\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomType\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetTextLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setTextLineItemCustomField\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetTextLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setTextLineItemCustomType\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										},
										{
											"name": "SetTextLineItemDescription",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{shopping-list-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setTextLineItemDescription\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "post ShoppingLists"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get my shopping list by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my shopping list by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my shopping list by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/{{shopping-list-id}}?version={{shopping-list-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{shopping-list-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get my shopping list by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/key={{shopping-list-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Update my shopping list by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/key={{shopping-list-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete my shopping list by key",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists/key={{shopping-list-key}}?version={{shopping-list-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "version",
													"value": "{{shopping-list-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query my shopping lists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create my shopping list",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\" : {\n    \"en\" : \"test\"\n  }\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/me/shopping-lists",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"me",
												"shopping-lists"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "The My Shopping Lists endpoint creates and provides access to shopping lists scoped to a specific user."
						},
						{
							"name": "Verify my Customer's Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"confirm-id\", data.results[0].id); ",
											"    pm.environment.set(\"confirm-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"confirm-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"confirm-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"confirm-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"confirm-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me/email/confirm",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me",
										"email",
										"confirm"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Signup my customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"signup-id\", data.results[0].id); ",
											"    pm.environment.set(\"signup-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"signup-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"signup-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"signup-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"signup-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me/signup",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me",
										"signup"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Authenticate my Customer (Sign In)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"login-id\", data.results[0].id); ",
											"    pm.environment.set(\"login-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"login-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"login-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"login-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"login-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me",
										"login"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get my active cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"active-cart-id\", data.results[0].id); ",
											"    pm.environment.set(\"active-cart-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"active-cart-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"active-cart-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"active-cart-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"active-cart-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me/active-cart",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me",
										"active-cart"
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get my customer details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"me-id\", data.results[0].id); ",
											"    pm.environment.set(\"me-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"me-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"me-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"me-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"me-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me"
									],
									"query": [
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update my customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"me-id\", data.results[0].id); ",
											"    pm.environment.set(\"me-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"me-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"me-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"me-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"me-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me"
									]
								},
								"description": "Update my customer"
							},
							"response": []
						},
						{
							"name": "Delete my Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"me-id\", data.results[0].id); ",
											"    pm.environment.set(\"me-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"me-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"me-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"me-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"me-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/me?version={{me-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"me"
									],
									"query": [
										{
											"key": "version",
											"value": "{{me-version}}"
										}
									]
								},
								"description": "Delete my Customer"
							},
							"response": []
						}
					],
					"description": "null"
				},
				{
					"name": "Extensions",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "ChangeDestination",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"extension-id\", data.results[0].id); ",
													"    pm.environment.set(\"extension-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"extension-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"extension-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"extension-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"extension-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{extension-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeDestination\",\n            \"destination\" : {\n              \"type\" : \"HTTP\",\n              \"url\" : \"URL-String\",\n              \"authentication\" : {\n                \"type\" : \"AuthorizationHeader\",\n                \"headerValue\" : \"valueString\"\n              }\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"extensions",
												"{{extension-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Extensions"
									},
									"response": []
								},
								{
									"name": "ChangeTriggers",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"extension-id\", data.results[0].id); ",
													"    pm.environment.set(\"extension-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"extension-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"extension-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"extension-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"extension-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{extension-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTriggers\",\n            \"triggers\" : [ {\n              \"resourceTypeId\" : \"cart\",\n              \"actions\" : [ \"Create\", \"Update\" ]\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"extensions",
												"{{extension-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Extensions"
									},
									"response": []
								},
								{
									"name": "SetKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"extension-id\", data.results[0].id); ",
													"    pm.environment.set(\"extension-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"extension-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"extension-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"extension-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"extension-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{extension-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"keyString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"extensions",
												"{{extension-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Extensions"
									},
									"response": []
								},
								{
									"name": "SetTimeoutInMs",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"extension-id\", data.results[0].id); ",
													"    pm.environment.set(\"extension-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"extension-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"extension-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"extension-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"extension-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{extension-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setTimeoutInMs\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"extensions",
												"{{extension-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Extensions"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Extension by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/key={{extension-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"key={{extension-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the representation of an extension by its key."
							},
							"response": []
						},
						{
							"name": "Update Extension by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"my-new-extension-key\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/key={{extension-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"key={{extension-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Extension by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/key={{extension-key}}?version={{extension-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"key={{extension-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{extension-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Extension by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"{{extension-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the representation of an extension by its id."
							},
							"response": []
						},
						{
							"name": "Update Extension by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"my-new-extension-key\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"{{extension-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Extension by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions/{{extension-id}}?version={{extension-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions",
										"{{extension-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{extension-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query extensions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Extension",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"extension-id\", data.results[0].id); ",
											"    pm.environment.set(\"extension-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"extension-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"extension-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"extension-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"extension-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"destination\" : {\n    \"type\" : \"HTTP\",\n    \"url\" : \"https://example.azurewebsites.net/api/extension\",\n    \"authentication\" : {\n      \"type\" : \"AzureFunctions\",\n      \"key\" : \"some-azure-function-code\"\n    }\n  },\n  \"triggers\" : [ {\n    \"resourceTypeId\" : \"cart\",\n    \"actions\" : [ \"Create\", \"Update\" ]\n  } ],\n  \"key\" : \"my-extension\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/extensions",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"extensions"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Currently, a maximum of 25 extensions can be created per project."
							},
							"response": []
						}
					],
					"description": "Extend the behavior of an API with your business logic"
				},
				{
					"name": "Api-clients",
					"item": [
						{
							"name": "Get ApiClient by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"api-client-id\", data.results[0].id); ",
											"    pm.environment.set(\"api-client-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"api-client-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"api-client-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"api-client-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"api-client-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/api-clients/{{api-client-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"api-clients",
										"{{api-client-id}}"
									]
								},
								"description": "Get ApiClient by ID"
							},
							"response": []
						},
						{
							"name": "Delete ApiClient by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"api-client-id\", data.results[0].id); ",
											"    pm.environment.set(\"api-client-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"api-client-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"api-client-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"api-client-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"api-client-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/api-clients/{{api-client-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"api-clients",
										"{{api-client-id}}"
									]
								},
								"description": "Delete ApiClient by ID"
							},
							"response": []
						},
						{
							"name": "Query api-clients",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"api-client-id\", data.results[0].id); ",
											"    pm.environment.set(\"api-client-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"api-client-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"api-client-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"api-client-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"api-client-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/api-clients",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"api-clients"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create ApiClient",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"api-client-id\", data.results[0].id); ",
											"    pm.environment.set(\"api-client-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"api-client-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"api-client-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"api-client-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"api-client-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"api-client-name\",\n  \"scope\" : \"view_products\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/api-clients",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"api-clients"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Manage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.\n"
				},
				{
					"name": "Stores",
					"item": [
						{
							"name": "Update actions",
							"item": [
								{
									"name": "AddDistributionChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addDistributionChannel\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "AddSupplyChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addSupplyChannel\",\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "RemoveDistributionChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeDistributionChannel\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "RemoveSupplyChannel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeSupplyChannel\",\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetCustomField",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetCustomType",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetDistributionChannels",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDistributionChannels\",\n            \"distributionChannels\" : [ {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetLanguages",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLanguages\",\n            \"languages\" : [ \"en\" ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetName",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setName\",\n            \"name\" : {\n              \"en\" : \"New Name\"\n            }\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								},
								{
									"name": "SetSupplyChannels",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"store-id\", data.results[0].id); ",
													"    pm.environment.set(\"store-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"store-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"store-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"store-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"store-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": {{store-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSupplyChannels\",\n            \"supplyChannels\" : [ {\n              \"typeId\" : \"channel\",\n              \"id\" : \"12345\"\n            } ]\n          }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"stores",
												"{{store-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "post Stores"
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Store by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/key={{store-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"key={{store-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Store by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/key={{store-key}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"key={{store-key}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Store by key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/key={{store-key}}?version={{store-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"key={{store-key}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{store-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Get Store by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"{{store-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Update Store by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/{{store-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"{{store-id}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Delete Store by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores/{{store-id}}?version={{store-version}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores",
										"{{store-id}}"
									],
									"query": [
										{
											"key": "version",
											"value": "{{store-version}}"
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Query stores",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"store-id\", data.results[0].id); ",
											"    pm.environment.set(\"store-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"store-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"store-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"store-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"store-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\" : \"random-key-123\",\n  \"name\" : {\n    \"en\" : \"main store\"\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/stores",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"stores"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "null"
							},
							"response": []
						}
					],
					"description": "Stores let you model the context your customers shop in."
				},
				{
					"name": "In-store",
					"item": [
						{
							"name": "Carts",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddCustomLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addCustomLineItem\",\n            \"name\" : {\n              \"en\" : \"Name EN\",\n              \"de\" : \"Name DE\"\n            },\n            \"quantity\" : 1,\n            \"money\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4200\n            },\n            \"slug\" : \"mySlug\",\n            \"taxCategory\" : {\n              \"typeId\" : \"tax-category\",\n              \"id\" : \"{{category-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddDiscountCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addDiscountCode\",\n            \"code\" : \"mydiscountcode\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addLineItem\",\n            \"productId\" : \"{{product-id}}\",\n            \"variantId\" : 2,\n            \"quantity\" : 1,\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"externalTaxRate\" : {\n              \"name\" : \"StandardExternalTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\",\n              \"state\" : \"Bavaria\"\n            },\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddPayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPayment\",\n            \"payment\" : {\n              \"id\" : \"{{payment-id}}\",\n              \"typeId\" : \"payment\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddShoppingList",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addShoppingList\",\n            \"shoppingList\" : {\n              \"id\" : \"{{shopping-list-id}}\",\n              \"typeId\" : \"shopping-list\"\n            },\n            \"supplyChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            },\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ApplyDeltaToCustomLineItemShippingDetailsTargets",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"applyDeltaToCustomLineItemShippingDetailsTargets\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"targetsDelta\" : [ {\n              \"addressKey\" : \"addressKeyString\",\n              \"quantity\" : 1\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ApplyDeltaToLineItemShippingDetailsTargets",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"applyDeltaToLineItemShippingDetailsTargets\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"targetsDelta\" : [ {\n              \"addressKey\" : \"addressKeyString\",\n              \"quantity\" : 1\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeCustomLineItemMoney",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCustomLineItemMoney\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"money\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4200\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeCustomLineItemQuantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeCustomLineItemQuantity\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeLineItemQuantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeLineItemQuantity\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeTaxCalculationMode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxCalculationMode\",\n            \"taxCalculationMode\" : \"LineItemLevel\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeTaxMode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxMode\",\n            \"taxMode\" : \"Platform\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeTaxRoundingMode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeTaxRoundingMode\",\n            \"taxRoundingMode\" : \"HalfUp\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "Recalculate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"recalculate\",\n            \"updateProductData\" : false\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveCustomLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeCustomLineItem\",\n            \"customLineItemId\" : \"{{customLineItemId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveDiscountCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeDiscountCode\",\n            \"discountCode\" : {\n              \"typeId\" : \"discount-code\",\n              \"id\" : \"{{discount-code-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeItemShippingAddress\",\n            \"addressKey\" : \"{{addressKey}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveLineItem",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeLineItem\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 1,\n            \"externalPrice\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4000\n            },\n            \"shippingDetailsToRemove\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemovePayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removePayment\",\n            \"payment\" : {\n              \"id\" : \"{{payment-id}}\",\n              \"typeId\" : \"payment\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetAnonymousId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAnonymousId\",\n            \"anonymousId\" : \"idString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCartTotalTax",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCartTotalTax\",\n            \"externalTotalGross\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 10000\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCountry",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCountry\",\n            \"country\" : \"DE\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomField\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            },\n            \"customLineItemId\" : \"{{customLineItemId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemShippingDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemShippingDetails\",\n            \"customLineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 1\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemTaxAmount",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemTaxAmount\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"centAmount\" : 2000000,\n                \"currencyCode\" : \"EUR\"\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemTaxRate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemTaxRate\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"externalTaxRate\" : {\n              \"name\" : \"TaxRateName\",\n              \"country\" : \"DE\",\n              \"amount\" : 0.19\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomShippingMethod",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomShippingMethod\",\n            \"shippingMethodName\" : \"myCustomShippingMethod\",\n            \"shippingRate\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              }\n            },\n            \"taxCategory\" : {\n              \"id\" : \"{{category-id}}\",\n              \"typeId\" : \"tax-category\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerEmail",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerEmail\",\n            \"email\" : \"foo@bar.com\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerGroup",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerGroup\",\n            \"customerGroup\" : {\n              \"id\" : \"{{customer-group-id}}\",\n              \"typeId\" : \"customer-group\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerId\",\n            \"customerId\" : \"{{customer-id}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeleteDaysAfterLastModification",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeleteDaysAfterLastModification\",\n            \"deleteDaysAfterLastModification\" : 90\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomField\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomType\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetItemShippingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomField\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetItemShippingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomType\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetKey",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"myNewKey\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomField\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomType\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemDistributionChannel",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemDistributionChannel\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemPrice",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemPrice\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalPrice\" : {\n              \"currencyCode\" : \"EUR\",\n              \"centAmount\" : 4000\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemShippingDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemShippingDetails\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 1\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemTaxAmount",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTaxAmount\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 100\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemTaxRate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTaxRate\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTaxRate\" : {\n              \"name\" : \"myTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemTotalPrice",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemTotalPrice\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"externalTotalPrice\" : {\n              \"price\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              },\n              \"totalPrice\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 4200\n              }\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLocale",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingMethod",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethod\",\n            \"shippingMethod\" : {\n              \"id\" : \"{{shipping-method-id}}\",\n              \"typeId\" : \"shipping-method\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingMethodTaxAmount",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethodTaxAmount\",\n            \"externalTaxAmount\" : {\n              \"totalGross\" : {\n                \"centAmount\" : 2000000,\n                \"currencyCode\" : \"EUR\"\n              },\n              \"taxRate\" : {\n                \"name\" : \"myTaxRate\",\n                \"amount\" : 0.19,\n                \"country\" : \"DE\"\n              }\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingMethodTaxRate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingMethodTaxRate\",\n            \"externalTaxRate\" : {\n              \"name\" : \"myTaxRate\",\n              \"amount\" : 0.19,\n              \"country\" : \"DE\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingRateInput",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingRateInput\",\n            \"shippingRateInput\" : {\n              \"type\" : \"Classification\",\n              \"key\" : \"shippingRateString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "UpdateItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get cart by customer id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/customer-id={{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"customer-id={{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Retrieves the active cart of the customer that has been modified most recently in a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\n\nIf the cart exists in the commercetools project but does not have the store field, or the store field\nreferences a different store, this method returns a ResourceNotFound error.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.\n"
									},
									"response": []
								},
								{
									"name": "Get cart by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/key={{cart-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns a cart by its key from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nThe cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n"
									},
									"response": []
								},
								{
									"name": "Update cart by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/key={{cart-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Delete cart by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/key={{cart-key}}?version={{cart-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"key={{cart-key}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{cart-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Replicate cart for store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"replicate-id\", data.results[0].id); ",
													"    pm.environment.set(\"replicate-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"replicate-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"replicate-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"replicate-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"replicate-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/replicate",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"replicate"
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get cart by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nThe cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n"
									},
									"response": []
								},
								{
									"name": "Update cart by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Delete cart by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts/{{cart-id}}?version={{cart-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts",
												"{{cart-id}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{cart-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query carts in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts"
											],
											"query": [
												{
													"key": "customerId",
													"value": "",
													"disabled": true
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Queries carts in a specific Store. The {storeKey} path parameter maps to a Store's key."
									},
									"response": []
								},
								{
									"name": "Create cart in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currency\" : \"EUR\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/carts",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"carts"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Creates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the cart's store field is always set to the store specified in the path parameter.\nCreating a cart can fail with an InvalidOperation if the referenced shipping method\nin the CartDraft has a predicate which does not match the cart.\n"
									},
									"response": []
								}
							],
							"description": "A shopping cart holds product variants and can be ordered."
						},
						{
							"name": "Orders",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddDelivery",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addDelivery\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 1\n            } ],\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            },\n            \"parcels\" : [ {\n              \"measurements\" : {\n                \"heightInMillimeter\" : 11,\n                \"widthInMillimeter\" : 11\n              },\n              \"trackingData\" : {\n                \"trackingId\" : \"{{trackingId}}\",\n                \"carrier\" : \"TNT\",\n                \"provider\" : \"providerName\",\n                \"providerTransaction\" : \"{{transactionId}}\",\n                \"isReturn\" : false\n              }\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddParcelToDelivery",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addParcelToDelivery\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"measurements\" : {\n              \"heightInMillimeter\" : 11,\n              \"widthInMillimeter\" : 11\n            },\n            \"trackingData\" : {\n              \"trackingId\" : \"{{trackingId}}\",\n              \"carrier\" : \"TNT\",\n              \"provider\" : \"providerName\",\n              \"providerTransaction\" : \"{{transactionId}}\",\n              \"isReturn\" : false\n            },\n            \"items\" : {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddPayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPayment\",\n            \"payment\" : {\n              \"typeId\" : \"payment\",\n              \"id\" : \"{{payment-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddReturnInfo",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addReturnInfo\",\n            \"items\" : [ {\n              \"quantity\" : 1,\n              \"lineItemId\" : \"{{lineItemId}}\",\n              \"shipmentState\" : \"Returned\"\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeOrderState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeOrderState\",\n            \"orderState\" : \"Open\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangePaymentState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changePaymentState\",\n            \"paymentState\" : \"Failed\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeShipmentState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeShipmentState\",\n            \"shipmentState\" : \"Ready\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ImportCustomLineItemState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"importCustomLineItemState\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"state\" : [ {\n              \"quantity\" : 6,\n              \"state\" : {\n                \"typeId\" : \"state\",\n                \"id\" : \"{{state-id}}\"\n              }\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ImportLineItemState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"importLineItemState\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"state\" : [ {\n              \"quantity\" : 5,\n              \"state\" : {\n                \"typeId\" : \"state\",\n                \"id\" : \"{{state-id}}\"\n              }\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveDelivery",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeDelivery\",\n            \"deliveryId\" : \"{{deliveryId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeItemShippingAddress\",\n            \"addressKey\" : \"addressKey\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveParcelFromDelivery",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeParcelFromDelivery\",\n            \"parcelId\" : \"{{parcelId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemovePayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removePayment\",\n            \"payment\" : {\n              \"typeId\" : \"payment\",\n              \"id\" : \"{{payment-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetBillingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setBillingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomField\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemCustomType\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomLineItemShippingDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomLineItemShippingDetails\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"{{addressKey}}\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerEmail",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerEmail\",\n            \"email\" : \"mail@mail.com\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerId\",\n            \"customerId\" : \"{{customer-id}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddress\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomField\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryAddressCustomType\",\n            \"deliveryId\" : \"{{delivery-id}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDeliveryItems",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDeliveryItems\",\n            \"deliveryId\" : \"{{deliveryId}}\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetItemShippingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomField\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetItemShippingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setItemShippingAddressCustomType\",\n            \"addressKey\" : \"{{address-key}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomField\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemCustomType\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLineItemShippingDetails",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemShippingDetails\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"shippingDetails\" : {\n              \"targets\" : [ {\n                \"addressKey\" : \"AddressKeyStringFromAddress\",\n                \"quantity\" : 2\n              } ]\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLocale",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetOrderNumber",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setOrderNumber\",\n            \"orderNumber\" : \"myOrderNumber\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetParcelItems",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelItems\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"items\" : [ {\n              \"id\" : \"{{lineItemId}}\",\n              \"quantity\" : 2\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetParcelMeasurements",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelMeasurements\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"measurements\" : {\n              \"heightInMillimeter\" : 11,\n              \"lengthInMillimeter\" : 11\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetParcelTrackingData",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setParcelTrackingData\",\n            \"parcelId\" : \"{{parcelId}}\",\n            \"trackingData\" : {\n              \"trackingId\" : \"{{trackingId}}\",\n              \"carrier\" : \"TNT\",\n              \"provider\" : \"providerName\",\n              \"providerTransaction\" : \"{{transactionId}}\",\n              \"isReturn\" : false\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetReturnPaymentState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setReturnPaymentState\",\n            \"returnItemId\" : \"{{returnItemId}}\",\n            \"paymentState\" : \"NotRefunded\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetReturnShipmentState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setReturnShipmentState\",\n            \"returnItemId\" : \"{{returnItemId}}\",\n            \"shipmentState\" : \"BackInStock\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetShippingAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setShippingAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetStore",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "TransitionCustomLineItemState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionCustomLineItemState\",\n            \"customLineItemId\" : \"{{customLineItemId}}\",\n            \"quantity\" : 6,\n            \"fromState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            },\n            \"toState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "TransitionLineItemState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionLineItemState\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"quantity\" : 3,\n            \"fromState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            },\n            \"toState\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "TransitionState",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{state-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "UpdateItemShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateItemShippingAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "UpdateSyncInfo",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{order-version}},\n    \"actions\": [\n        {\n            \"action\" : \"updateSyncInfo\",\n            \"channel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get order by order number in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/order-number={{order-number}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"order-number={{order-number}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns an order by its order number from a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n"
									},
									"response": []
								},
								{
									"name": "Update order by order number in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/order-number={{order-number}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"order-number={{order-number}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n"
									},
									"response": []
								},
								{
									"name": "Delete order by order number in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/order-number={{order-number}}?version={{order-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"order-number={{order-number}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{order-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get order by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Update order by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Delete order by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders/{{order-id}}?version={{order-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders",
												"{{order-id}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{order-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query orders in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Queries orders in a specific Store. The {storeKey} path parameter maps to a Store's key."
									},
									"response": []
								},
								{
									"name": "Create order in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"order-id\", data.results[0].id); ",
													"    pm.environment.set(\"order-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"order-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"order-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"order-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"order-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/orders",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"orders"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Creates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the orders's store field is always set to the store specified in the path parameter.\nThe cart must have a shipping address set before creating an order. When using the Platform TaxMode,\nthe shipping address is used for tax calculation.\n"
									},
									"response": []
								}
							],
							"description": "An order can be created from a cart, usually after a checkout process has been completed."
						},
						{
							"name": "Me",
							"item": [
								{
									"name": "Carts",
									"item": [
										{
											"name": "Update actions",
											"item": [
												{
													"name": "AddDiscountCode",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addDiscountCode\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "AddItemShippingAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addItemShippingAddress\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "AddLineItem",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addLineItem\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "AddPayment",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"addPayment\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "ApplyDeltaToLineItemShippingDetailsTargets",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"applyDeltaToLineItemShippingDetailsTargets\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "ChangeLineItemQuantity",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeLineItemQuantity\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "ChangeTaxMode",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"changeTaxMode\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "Recalculate",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"recalculate\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "RemoveDiscountCode",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeDiscountCode\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "RemoveItemShippingAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeItemShippingAddress\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "RemoveLineItem",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removeLineItem\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "RemovePayment",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"removePayment\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetBillingAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setBillingAddress\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetCountry",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCountry\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetCustomField",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomField\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetCustomType",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomType\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetCustomerEmail",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setCustomerEmail\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetDeleteDaysAfterLastModification",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setDeleteDaysAfterLastModification\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetLineItemCustomField",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomField\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetLineItemCustomType",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemCustomType\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetLineItemDistributionChannel",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLineItemDistributionChannel\",\n            \"lineItemId\" : \"{{lineItemId}}\",\n            \"distributionChannel\" : {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{channel-id}}\"\n            }\n          }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetLineItemShippingDetails",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLineItemShippingDetails\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetLocale",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setLocale\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetShippingAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setShippingAddress\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "SetShippingMethod",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"setShippingMethod\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												},
												{
													"name": "UpdateItemShippingAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
																	"var data = JSON.parse(responseBody);",
																	"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
																	"    pm.environment.set(\"cart-id\", data.results[0].id); ",
																	"    pm.environment.set(\"cart-version\", data.results[0].version);",
																	"}",
																	"if(data.results && data.results[0] && data.results[0].key){",
																	"    pm.environment.set(\"cart-key\", data.results[0].key); ",
																	"}",
																	"if(data.version){",
																	"    pm.environment.set(\"cart-version\", data.version);",
																	"}",
																	"if(data.id){",
																	"    pm.environment.set(\"cart-id\", data.id); ",
																	"}",
																	"if(data.key){",
																	"    pm.environment.set(\"cart-key\", data.key);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"value": "{{ctp_access_token}}",
																	"type": "string"
																},
																{
																	"key": "addTokenTo",
																	"value": "header",
																	"type": "string"
																},
																{
																	"key": "tokenType",
																	"value": "Bearer",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {{cart-version}},\n    \"actions\": [\n                |{\n            \"action\": \"updateItemShippingAddress\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
															"host": [
																"{{host}}"
															],
															"path": [
																"{{project-key}}",
																"in-store",
																"key={{store-key}}",
																"me",
																"carts",
																"{{cart-id}}"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "",
																	"disabled": true
																}
															]
														},
														"description": "post Carts"
													},
													"response": []
												}
											]
										},
										{
											"name": "Get my cart by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Update my cart by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Delete my cart by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts/{{cart-id}}?version={{cart-version}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"carts",
														"{{cart-id}}"
													],
													"query": [
														{
															"key": "version",
															"value": "{{cart-version}}"
														},
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Query my carts in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"carts"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "",
															"disabled": true
														},
														{
															"key": "withTotal",
															"value": "",
															"disabled": true
														},
														{
															"key": "where",
															"value": "",
															"disabled": true
														},
														{
															"key": "/^var[.][a-zA-Z0-9]+$/",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Create my cart in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"cart-id\", data.results[0].id); ",
															"    pm.environment.set(\"cart-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"cart-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"cart-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"cart-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"cart-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\" : \"EUR\"\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/carts",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"carts"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										}
									],
									"description": "A shopping cart holds product variants and can be ordered."
								},
								{
									"name": "Orders",
									"item": [
										{
											"name": "Get my order by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/orders/{{order-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"orders",
														"{{order-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Query my orders in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/orders",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"orders"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "",
															"disabled": true
														},
														{
															"key": "withTotal",
															"value": "",
															"disabled": true
														},
														{
															"key": "where",
															"value": "",
															"disabled": true
														},
														{
															"key": "/^var[.][a-zA-Z0-9]+$/",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Create my order in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"order-id\", data.results[0].id); ",
															"    pm.environment.set(\"order-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"order-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"order-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"order-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"order-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/orders",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"orders"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										}
									],
									"description": "An order can be created from a order, usually after a checkout process has been completed."
								},
								{
									"name": "Shopping-lists",
									"item": [
										{
											"name": "Get my shopping list by key in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/key={{shopping-list-key}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"key={{shopping-list-key}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Gets a shopping list by Key."
											},
											"response": []
										},
										{
											"name": "Update my shopping list by key in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/key={{shopping-list-key}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"key={{shopping-list-key}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Update a shopping list found by its Key."
											},
											"response": []
										},
										{
											"name": "Delete my shopping list by key in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/key={{shopping-list-key}}?version={{shopping-list-version}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"key={{shopping-list-key}}"
													],
													"query": [
														{
															"key": "dataErasure",
															"value": "",
															"disabled": true
														},
														{
															"key": "version",
															"value": "{{shopping-list-version}}"
														},
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Get my shopping list by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Gets a shopping list by ID."
											},
											"response": []
										},
										{
											"name": "Update my shopping list by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/{{shopping-list-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Delete my shopping list by id in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists/{{shopping-list-id}}?version={{shopping-list-version}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists",
														"{{shopping-list-id}}"
													],
													"query": [
														{
															"key": "dataErasure",
															"value": "",
															"disabled": true
														},
														{
															"key": "version",
															"value": "{{shopping-list-version}}"
														},
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Get my shopping lists in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "",
															"disabled": true
														},
														{
															"key": "withTotal",
															"value": "",
															"disabled": true
														},
														{
															"key": "where",
															"value": "",
															"disabled": true
														},
														{
															"key": "/^var[.][a-zA-Z0-9]+$/",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										},
										{
											"name": "Create my shopping lists in store",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
															"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"shopping-list-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"shopping-list-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"shopping-list-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/shopping-lists",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"me",
														"shopping-lists"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "null"
											},
											"response": []
										}
									],
									"description": "shopping-lists e.g. for wishlist support\n"
								},
								{
									"name": "Get my active cart in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"active-cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"active-cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"active-cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"active-cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"active-cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"active-cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/me/active-cart",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"me",
												"active-cart"
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "null"
						},
						{
							"name": "Customers",
							"item": [
								{
									"name": "Update actions",
									"item": [
										{
											"name": "AddAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAddress\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddBillingAddressId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addBillingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddShippingAddressId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addShippingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "AddStore",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeAddress\",\n            \"addressId\" : \"{{addressId}}\",\n            \"address\" : {\n              \"id\" : \"exampleAddress\",\n              \"key\" : \"exampleKey\",\n              \"title\" : \"My Address\",\n              \"salutation\" : \"Mr.\",\n              \"firstName\" : \"Example\",\n              \"lastName\" : \"Person\",\n              \"streetName\" : \"Examplary Street\",\n              \"streetNumber\" : \"4711\",\n              \"additionalStreetInfo\" : \"Backhouse\",\n              \"postalCode\" : \"80933\",\n              \"city\" : \"Exemplary City\",\n              \"region\" : \"Exemplary Region\",\n              \"state\" : \"Exemplary State\",\n              \"country\" : \"DE\",\n              \"company\" : \"My Company Name\",\n              \"department\" : \"Sales\",\n              \"building\" : \"Hightower 1\",\n              \"apartment\" : \"247\",\n              \"pOBox\" : \"2471\",\n              \"phone\" : \"+49 89 12345678\",\n              \"mobile\" : \"+49 171 2345678\",\n              \"email\" : \"mail@mail.com\",\n              \"fax\" : \"+49 89 12345679\",\n              \"additionalAddressInfo\" : \"no additional Info\",\n              \"externalId\" : \"Information not needed\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "ChangeEmail",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"changeEmail\",\n            \"email\" : \"mail@mail.com\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveBillingAddressId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeBillingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveShippingAddressId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeShippingAddressId\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "RemoveStore",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"removeStore\",\n            \"store\" : {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetAddressCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\",\n            \"addressId\" : \"{{address-id}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetAddressCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setAddressCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            },\n            \"addressId\" : \"{{address-id}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCompanyName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCompanyName\",\n            \"companyName\" : \"Company Ltd.\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomField",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomField\",\n            \"name\" : \"ExamplaryStringTypeField\",\n            \"value\" : \"TextString\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomType",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomType\",\n            \"type\" : {\n              \"id\" : \"{{type-id}}\",\n              \"typeId\" : \"type\"\n            },\n            \"fields\" : {\n              \"examplaryStringTypeField\" : \"TextString\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerGroup",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerGroup\",\n            \"customerGroup\" : {\n              \"id\" : \"{{customer-group-id}}\",\n              \"typeId\" : \"customer-group\"\n            }\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetCustomerNumber",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setCustomerNumber\",\n            \"customerNumber\" : \"123\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDateOfBirth",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDateOfBirth\",\n            \"dateOfBirth\" : \"2015-10-21\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDefaultBillingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDefaultBillingAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetDefaultShippingAddress",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setDefaultShippingAddress\",\n            \"addressId\" : \"{{addressId}}\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetExternalId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setExternalId\",\n            \"externalId\" : \"123\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetFirstName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setFirstName\",\n            \"fistName\" : \"Example\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetKey",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setKey\",\n            \"key\" : \"newKey\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLastName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLastName\",\n            \"lastName\" : \"Person\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetLocale",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setLocale\",\n            \"locale\" : \"de-DE\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetMiddleName",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setMiddleName\",\n            \"middleName\" : \"middleName\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetSalutation",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setSalutation\",\n            \"salutation\" : \"Mr\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetStores",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setStores\",\n            \"stores\" : [ {\n              \"key\" : \"{{store-key}}\",\n              \"typeId\" : \"store\"\n            } ]\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetTitle",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTitle\",\n            \"title\" : \"Dr\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										},
										{
											"name": "SetVatId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
															"var data = JSON.parse(responseBody);",
															"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
															"    pm.environment.set(\"customer-id\", data.results[0].id); ",
															"    pm.environment.set(\"customer-version\", data.results[0].version);",
															"}",
															"if(data.results && data.results[0] && data.results[0].key){",
															"    pm.environment.set(\"customer-key\", data.results[0].key); ",
															"}",
															"if(data.version){",
															"    pm.environment.set(\"customer-version\", data.version);",
															"}",
															"if(data.id){",
															"    pm.environment.set(\"customer-id\", data.id); ",
															"}",
															"if(data.key){",
															"    pm.environment.set(\"customer-key\", data.key);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{ctp_access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														},
														{
															"key": "tokenType",
															"value": "Bearer",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": {{customer-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setVatId\",\n            \"vatId\" : \"vatId\"\n          }\n    ]\n}"
												},
												"url": {
													"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
													"host": [
														"{{host}}"
													],
													"path": [
														"{{project-key}}",
														"in-store",
														"key={{store-key}}",
														"customers",
														"{{customer-id}}"
													],
													"query": [
														{
															"key": "expand",
															"value": "",
															"disabled": true
														}
													]
												},
												"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get customer by password verification token in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/password-token={{password-token}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"password-token={{password-token}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get customer by email verification token in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/email-token={{email-token}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"email-token={{email-token}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create a Token for verifying the Customer's Email in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"email-token-id\", data.results[0].id); ",
													"    pm.environment.set(\"email-token-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"email-token-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"email-token-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"email-token-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"email-token-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/email-token",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"email-token"
											]
										},
										"description": "Create a Token for verifying the Customer's Email in store"
									},
									"response": []
								},
								{
									"name": "Verify Customer's Email in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"confirm-id\", data.results[0].id); ",
													"    pm.environment.set(\"confirm-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"confirm-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"confirm-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"confirm-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"confirm-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/email/confirm",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"email",
												"confirm"
											]
										},
										"description": "Verifies customer's email using a token."
									},
									"response": []
								},
								{
									"name": "Change a customers password in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"password-id\", data.results[0].id); ",
													"    pm.environment.set(\"password-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"password-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"password-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"password-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"password-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/password",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"password"
											]
										},
										"description": "Change a customers password"
									},
									"response": []
								},
								{
									"name": "Reset Customer's Password in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"reset-id\", data.results[0].id); ",
													"    pm.environment.set(\"reset-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"reset-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"reset-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"reset-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"reset-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/password/reset",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"password",
												"reset"
											]
										},
										"description": "Set a new password using a token."
									},
									"response": []
								},
								{
									"name": "Create a Token for Resetting the Customer's Password in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"password-token-id\", data.results[0].id); ",
													"    pm.environment.set(\"password-token-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"password-token-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"password-token-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"password-token-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"password-token-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/password-token",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"password-token"
											]
										},
										"description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n"
									},
									"response": []
								},
								{
									"name": "Get customer by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/key={{customer-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"key={{customer-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Update customer by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/key={{customer-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"key={{customer-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "If the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Delete customer by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/key={{customer-key}}?version={{customer-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"key={{customer-key}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{customer-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get customer by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Post customer by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n"
									},
									"response": []
								},
								{
									"name": "Delete customer by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers/{{customer-id}}?version={{customer-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers",
												"{{customer-id}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{customer-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Query customers in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create customer in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"customer-id\", data.results[0].id); ",
													"    pm.environment.set(\"customer-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"customer-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"customer-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"customer-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"customer-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\" : \"<random>@example.com\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"password\" : \"secret123\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/customers",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"customers"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Creates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint, if omitted,\nthe customer's stores field is set to the store specified in the path parameter.\nIf an anonymous cart is passed in as when using this method,\nthen the cart is assigned to the created customer and the version number of the Cart increases.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and\nthe store specified. If you pass in a cart with a store field specified,\nthe store field must reference the same store specified in the {storeKey} path parameter.\n"
									},
									"response": []
								}
							],
							"description": "A customer is a person purchasing products. customers, Orders,\nComments and Reviews can be associated to a customer.\n"
						},
						{
							"name": "Shipping-methods",
							"item": [
								{
									"name": "Get ShippingMethods for a cart in a store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"matching-cart-id\", data.results[0].id); ",
													"    pm.environment.set(\"matching-cart-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"matching-cart-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"matching-cart-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"matching-cart-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"matching-cart-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shipping-methods/matching-cart?cartId=",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shipping-methods",
												"matching-cart"
											],
											"query": [
												{
													"key": "cartId",
													"value": ""
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "null"
						},
						{
							"name": "Shopping-lists",
							"item": [
								{
									"name": "Get shopping list by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/key={{shopping-list-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Gets a shopping list by Key."
									},
									"response": []
								},
								{
									"name": "Update shopping list by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/key={{shopping-list-key}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Update a shopping list found by its Key."
									},
									"response": []
								},
								{
									"name": "Delete shopping list by key in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/key={{shopping-list-key}}?version={{shopping-list-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"key={{shopping-list-key}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{shopping-list-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get shopping list by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "Gets a shopping list by ID."
									},
									"response": []
								},
								{
									"name": "Update shopping list by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/{{shopping-list-id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Delete shopping list by id in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists/{{shopping-list-id}}?version={{shopping-list-version}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists",
												"{{shopping-list-id}}"
											],
											"query": [
												{
													"key": "dataErasure",
													"value": "",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{shopping-list-version}}"
												},
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Get shopping lists in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "",
													"disabled": true
												},
												{
													"key": "withTotal",
													"value": "",
													"disabled": true
												},
												{
													"key": "where",
													"value": "",
													"disabled": true
												},
												{
													"key": "/^var[.][a-zA-Z0-9]+$/",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								},
								{
									"name": "Create shopping lists in store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
													"var data = JSON.parse(responseBody);",
													"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
													"    pm.environment.set(\"shopping-list-id\", data.results[0].id); ",
													"    pm.environment.set(\"shopping-list-version\", data.results[0].version);",
													"}",
													"if(data.results && data.results[0] && data.results[0].key){",
													"    pm.environment.set(\"shopping-list-key\", data.results[0].key); ",
													"}",
													"if(data.version){",
													"    pm.environment.set(\"shopping-list-version\", data.version);",
													"}",
													"if(data.id){",
													"    pm.environment.set(\"shopping-list-id\", data.id); ",
													"}",
													"if(data.key){",
													"    pm.environment.set(\"shopping-list-key\", data.key);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{ctp_access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												},
												{
													"key": "tokenType",
													"value": "Bearer",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}"
										},
										"url": {
											"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/shopping-lists",
											"host": [
												"{{host}}"
											],
											"path": [
												"{{project-key}}",
												"in-store",
												"key={{store-key}}",
												"shopping-lists"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "null"
									},
									"response": []
								}
							],
							"description": "shopping-lists e.g. for wishlist support\n"
						},
						{
							"name": "Authenticate Customer (Sign In) in store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"login-id\", data.results[0].id); ",
											"    pm.environment.set(\"login-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"login-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"login-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"login-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"login-key\", data.key);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/in-store/key={{store-key}}/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"in-store",
										"key={{store-key}}",
										"login"
									]
								},
								"description": "Authenticate Customer (Sign In) in store"
							},
							"response": []
						}
					],
					"description": "null"
				},
				{
					"name": "GraphQL",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"graphql-id\", data.results[0].id); ",
									"    pm.environment.set(\"graphql-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"graphql-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"graphql-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"graphql-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"graphql-key\", data.key);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\" : \"\\n      query query_1($productId: String){\\n        product(key:$productId){\\n          key\\n        }\\n      }\\n    \",\n  \"operationName\" : \"query_1\",\n  \"variables\" : {\n    \"productId\" : \"f8ded810-a1\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/graphql",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"graphql"
							]
						},
						"description": "Execute a GraphQL query"
					},
					"response": []
				},
				{
					"name": "Authenticate Customer (Sign In)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"login-id\", data.results[0].id); ",
									"    pm.environment.set(\"login-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"login-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"login-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"login-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"login-key\", data.key);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"login"
							]
						},
						"description": "Authenticate Customer (Sign In). Retrieves the authenticated\ncustomer (a customer that matches the given email/password pair).\nIf used with an access token for Anonymous Sessions,\nall orders and carts belonging to the anonymousId will be assigned to the newly created customer.\nIf a cart is is returned as part of the CustomerSignInResult,\nit has been recalculated (It will have up-to-date prices, taxes and discounts,\nand invalid line items have been removed.).\n"
					},
					"response": []
				},
				{
					"name": "Get project settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"-id\", data.results[0].id); ",
									"    pm.environment.set(\"-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"-key\", data.key);",
									"}",
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}"
							]
						},
						"description": "The Endpoint is responding a limited set of information about settings and configuration of the project.\n"
					},
					"response": []
				},
				{
					"name": "Update project settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"-id\", data.results[0].id); ",
									"    pm.environment.set(\"-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"-key\", data.key);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}"
							]
						},
						"description": "Update project"
					},
					"response": []
				}
			],
			"description": "The Project endpoint is used to retrieve certain information from a project."
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{ctp_access_token}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			}
		]
	}
}